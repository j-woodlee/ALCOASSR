{"version":3,"sources":["../../../../../lib/xlsx/xform/book/defined-name-xform.js"],"names":["utils","require","BaseXform","colCache","DefinedNamesXform","module","exports","inherits","render","xmlStream","model","openNode","name","localSheetId","writeText","ranges","join","closeNode","parseOpen","node","_parsedName","attributes","_parsedLocalSheetId","_parsedText","parseText","text","push","parseClose","extractRanges","undefined","parseInt","isValidRange","range","decodeEx","err","parsedText","quotesOpened","last","split","forEach","item","quotes","match","length","quotesEven"],"mappings":"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","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\nconst colCache = require('../../../utils/col-cache');\n\nconst DefinedNamesXform = (module.exports = function() {});\n\nutils.inherits(DefinedNamesXform, BaseXform, {\n  render(xmlStream, model) {\n    // <definedNames>\n    //   <definedName name=\"name\">name.ranges.join(',')</definedName>\n    //   <definedName name=\"_xlnm.Print_Area\" localSheetId=\"0\">name.ranges.join(',')</definedName>\n    // </definedNames>\n    xmlStream.openNode('definedName', {\n      name: model.name,\n      localSheetId: model.localSheetId,\n    });\n    xmlStream.writeText(model.ranges.join(','));\n    xmlStream.closeNode();\n  },\n  parseOpen(node) {\n    switch (node.name) {\n      case 'definedName':\n        this._parsedName = node.attributes.name;\n        this._parsedLocalSheetId = node.attributes.localSheetId;\n        this._parsedText = [];\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    this._parsedText.push(text);\n  },\n  parseClose() {\n    this.model = {\n      name: this._parsedName,\n      ranges: extractRanges(this._parsedText.join('')),\n    };\n    if (this._parsedLocalSheetId !== undefined) {\n      this.model.localSheetId = parseInt(this._parsedLocalSheetId, 10);\n    }\n    return false;\n  },\n});\n\nfunction isValidRange(range) {\n  try {\n    colCache.decodeEx(range);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction extractRanges(parsedText) {\n  const ranges = [];\n  let quotesOpened = false;\n  let last = '';\n  parsedText.split(',').forEach(item => {\n    if (!item) {\n      return;\n    }\n    const quotes = (item.match(/'/g) || []).length;\n\n    if (!quotes) {\n      if (quotesOpened) {\n        last += `${item},`;\n      } else if (isValidRange(item)) {\n        ranges.push(item);\n      }\n      return;\n    }\n    const quotesEven = quotes % 2 === 0;\n\n    if (!quotesOpened && quotesEven && isValidRange(item)) {\n      ranges.push(item);\n    } else if (quotesOpened && !quotesEven) {\n      quotesOpened = false;\n      if (isValidRange(last + item)) {\n        ranges.push(last + item);\n      }\n      last = '';\n    } else {\n      quotesOpened = true;\n      last += `${item},`;\n    }\n  });\n  return ranges;\n}\n"],"file":"defined-name-xform.js"}