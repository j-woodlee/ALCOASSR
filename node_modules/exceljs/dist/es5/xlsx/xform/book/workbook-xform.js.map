{"version":3,"sources":["../../../../../lib/xlsx/xform/book/workbook-xform.js"],"names":["_","require","utils","colCache","XmlStream","BaseXform","StaticXform","ListXform","DefinedNameXform","SheetXform","WorkbookViewXform","WorkbookPropertiesXform","WorkbookXform","module","exports","map","fileVersion","STATIC_XFORMS","workbookPr","bookViews","tag","count","childXform","sheets","definedNames","calcPr","inherits","WORKBOOK_ATTRIBUTES","xmlns","$","appName","lastEdited","lowestEdited","rupBuild","calcId","prepare","model","worksheets","printAreas","index","forEach","sheet","pageSetup","printArea","split","definedName","name","ranges","localSheetId","push","printTitlesRow","printTitlesColumn","titlesColumns","titlesRows","length","concat","media","medium","i","type","render","xmlStream","openXml","StdDocAttributes","openNode","properties","views","closeNode","parseOpen","node","parser","parseText","text","parseClose","undefined","reconcile","rels","workbookRels","reduce","rel","Id","worksheet","rId","worksheetHash","Target","id","state","each","range","decodeEx","dimensions","rangeString","join","dollarRegex","rowRangeRegex","rowRangeMatches","match","replace","columnRangeRegex","columnRangeMatches"],"mappings":"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","sourcesContent":["'use strict';\n\nconst _ = require('../../../utils/under-dash');\n\nconst utils = require('../../../utils/utils');\nconst colCache = require('../../../utils/col-cache');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst DefinedNameXform = require('./defined-name-xform');\nconst SheetXform = require('./sheet-xform');\nconst WorkbookViewXform = require('./workbook-view-xform');\nconst WorkbookPropertiesXform = require('./workbook-properties-xform');\n\nconst WorkbookXform = (module.exports = function() {\n  this.map = {\n    fileVersion: WorkbookXform.STATIC_XFORMS.fileVersion,\n    workbookPr: new WorkbookPropertiesXform(),\n    bookViews: new ListXform({ tag: 'bookViews', count: false, childXform: new WorkbookViewXform() }),\n    sheets: new ListXform({ tag: 'sheets', count: false, childXform: new SheetXform() }),\n    definedNames: new ListXform({ tag: 'definedNames', count: false, childXform: new DefinedNameXform() }),\n    calcPr: WorkbookXform.STATIC_XFORMS.calcPr,\n  };\n});\n\nutils.inherits(\n  WorkbookXform,\n  BaseXform,\n  {\n    WORKBOOK_ATTRIBUTES: {\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n      'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n      'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n      'mc:Ignorable': 'x15',\n      'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\n    },\n    STATIC_XFORMS: {\n      fileVersion: new StaticXform({ tag: 'fileVersion', $: { appName: 'xl', lastEdited: 5, lowestEdited: 5, rupBuild: 9303 } }),\n      calcPr: new StaticXform({ tag: 'calcPr', $: { calcId: 171027 } }),\n    },\n  },\n  {\n    prepare(model) {\n      model.sheets = model.worksheets;\n\n      // collate all the print areas from all of the sheets and add them to the defined names\n      const printAreas = [];\n      let index = 0; // sheets is sparse array - calc index manually\n      model.sheets.forEach(sheet => {\n        if (sheet.pageSetup && sheet.pageSetup.printArea) {\n          const printArea = sheet.pageSetup.printArea.split(':');\n          const definedName = {\n            name: '_xlnm.Print_Area',\n            ranges: [`'${sheet.name}'!$${printArea[0]}:$${printArea[1]}`],\n            localSheetId: index,\n          };\n          printAreas.push(definedName);\n        }\n        if (sheet.pageSetup && (sheet.pageSetup.printTitlesRow || sheet.pageSetup.printTitlesColumn)) {\n          const ranges = [];\n\n          if (sheet.pageSetup.printTitlesColumn) {\n            const titlesColumns = sheet.pageSetup.printTitlesColumn.split(':');\n            ranges.push(`'${sheet.name}'!$${titlesColumns[0]}:$${titlesColumns[1]}`);\n          }\n\n          if (sheet.pageSetup.printTitlesRow) {\n            const titlesRows = sheet.pageSetup.printTitlesRow.split(':');\n            ranges.push(`'${sheet.name}'!$${titlesRows[0]}:$${titlesRows[1]}`);\n          }\n\n          const definedName = {\n            name: '_xlnm.Print_Titles',\n            ranges,\n            localSheetId: index,\n          };\n\n          printAreas.push(definedName);\n        }\n        index++;\n      });\n      if (printAreas.length) {\n        model.definedNames = model.definedNames.concat(printAreas);\n      }\n\n\n      (model.media || []).forEach((medium, i) => {\n        // assign name\n        medium.name = medium.type + (i + 1);\n      });\n    },\n\n    render(xmlStream, model) {\n      xmlStream.openXml(XmlStream.StdDocAttributes);\n      xmlStream.openNode('workbook', WorkbookXform.WORKBOOK_ATTRIBUTES);\n\n      this.map.fileVersion.render(xmlStream);\n      this.map.workbookPr.render(xmlStream, model.properties);\n      this.map.bookViews.render(xmlStream, model.views);\n      this.map.sheets.render(xmlStream, model.sheets);\n      this.map.definedNames.render(xmlStream, model.definedNames);\n      this.map.calcPr.render(xmlStream);\n\n      xmlStream.closeNode();\n    },\n\n    parseOpen(node) {\n      if (this.parser) {\n        this.parser.parseOpen(node);\n        return true;\n      }\n      switch (node.name) {\n        case 'workbook':\n          return true;\n        default:\n          this.parser = this.map[node.name];\n          if (this.parser) {\n            this.parser.parseOpen(node);\n          }\n          return true;\n      }\n    },\n    parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n      }\n    },\n    parseClose(name) {\n      if (this.parser) {\n        if (!this.parser.parseClose(name)) {\n          this.parser = undefined;\n        }\n        return true;\n      }\n      switch (name) {\n        case 'workbook':\n          this.model = {\n            sheets: this.map.sheets.model,\n            properties: this.map.workbookPr.model || {},\n            views: this.map.bookViews.model,\n          };\n          if (this.map.definedNames.model) {\n            this.model.definedNames = this.map.definedNames.model;\n          }\n\n          return false;\n        default:\n          // not quite sure how we get here!\n          return true;\n      }\n    },\n\n    reconcile(model) {\n      const rels = (model.workbookRels || []).reduce((map, rel) => {\n        map[rel.Id] = rel;\n        return map;\n      }, {});\n\n      // reconcile sheet ids, rIds and names\n      const worksheets = [];\n      let worksheet;\n      let index = 0;\n\n      (model.sheets || []).forEach(sheet => {\n        const rel = rels[sheet.rId];\n        if (!rel) {\n          return;\n        }\n        worksheet = model.worksheetHash[`xl/${rel.Target}`];\n        // If there are \"chartsheets\" in the file, rel.Target will\n        // come out as chartsheets/sheet1.xml or similar here, and\n        // that won't be in model.worksheetHash.\n        // As we don't have the infrastructure to support chartsheets,\n        // we will ignore them for now:\n        if (worksheet) {\n          worksheet.name = sheet.name;\n          worksheet.id = sheet.id;\n          worksheet.state = sheet.state;\n          worksheets[index++] = worksheet;\n        }\n      });\n\n      // reconcile print areas\n      const definedNames = [];\n      _.each(model.definedNames, definedName => {\n        if (definedName.name === '_xlnm.Print_Area') {\n          worksheet = worksheets[definedName.localSheetId];\n          if (worksheet) {\n            if (!worksheet.pageSetup) {\n              worksheet.pageSetup = {};\n            }\n            const range = colCache.decodeEx(definedName.ranges[0]);\n            worksheet.pageSetup.printArea = range.dimensions;\n          }\n        } else if (definedName.name === '_xlnm.Print_Titles') {\n          worksheet = worksheets[definedName.localSheetId];\n          if (worksheet) {\n            if (!worksheet.pageSetup) {\n              worksheet.pageSetup = {};\n            }\n\n            const rangeString = definedName.ranges.join(',');\n\n            const dollarRegex = /\\$/g;\n\n            const rowRangeRegex = /\\$\\d+:\\$\\d+/;\n            const rowRangeMatches = rangeString.match(rowRangeRegex);\n\n            if (rowRangeMatches && rowRangeMatches.length) {\n              const  range = rowRangeMatches[0];\n              worksheet.pageSetup.printTitlesRow = range.replace(dollarRegex, '');\n            }\n\n            const columnRangeRegex = /\\$[A-Z]+:\\$[A-Z]+/;\n            const columnRangeMatches = rangeString.match(columnRangeRegex);\n\n            if (columnRangeMatches && columnRangeMatches.length) {\n              const range = columnRangeMatches[0];\n              worksheet.pageSetup.printTitlesColumn = range.replace(dollarRegex, '');\n            }\n          }\n        } else {\n          definedNames.push(definedName);\n        }\n      });\n      model.definedNames = definedNames;\n\n      // used by sheets to build their image models\n      model.media.forEach((media, i) => {\n        media.index = i;\n      });\n    },\n  }\n);\n"],"file":"workbook-xform.js"}