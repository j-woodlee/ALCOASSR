{"version":3,"sources":["../../../../../lib/xlsx/xform/strings/text-xform.js"],"names":["utils","require","BaseXform","TextXform","module","exports","inherits","tag","render","xmlStream","model","openNode","length","addAttribute","writeText","closeNode","_text","join","replace","$0","$1","String","fromCharCode","parseInt","parseOpen","node","name","parseText","text","push","parseClose"],"mappings":"AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB,C,CAEA;;;AAEA,IAAME,SAAS,GAAIC,MAAM,CAACC,OAAP,GAAiB,YAAW,CAAE,CAAjD;;AAEAL,KAAK,CAACM,QAAN,CAAeH,SAAf,EAA0BD,SAA1B,EAAqC;AACnC,MAAIK,GAAJ,GAAU;AACR,WAAO,GAAP;AACD,GAHkC;;AAKnCC,EAAAA,MALmC,kBAK5BC,SAL4B,EAKjBC,KALiB,EAKV;AACvBD,IAAAA,SAAS,CAACE,QAAV,CAAmB,GAAnB;;AACA,QAAID,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAApD,EAAyD;AACvDH,MAAAA,SAAS,CAACI,YAAV,CAAuB,WAAvB,EAAoC,UAApC;AACD;;AACDJ,IAAAA,SAAS,CAACK,SAAV,CAAoBJ,KAApB;AACAD,IAAAA,SAAS,CAACM,SAAV;AACD,GAZkC;;AAcnC,MAAIL,KAAJ,GAAY;AACV,WAAO,KAAKM,KAAL,CAAWC,IAAX,CAAgB,EAAhB,EAAoBC,OAApB,CAA4B,mBAA5B,EAAiD,UAACC,EAAD,EAAKC,EAAL;AAAA,aAAYC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,EAAD,EAAK,EAAL,CAA5B,CAAZ;AAAA,KAAjD,CAAP;AACD,GAhBkC;;AAkBnCI,EAAAA,SAlBmC,qBAkBzBC,IAlByB,EAkBnB;AACd,YAAQA,IAAI,CAACC,IAAb;AACE,WAAK,GAAL;AACE,aAAKV,KAAL,GAAa,EAAb;AACA,eAAO,IAAP;;AACF;AACE,eAAO,KAAP;AALJ;AAOD,GA1BkC;AA2BnCW,EAAAA,SA3BmC,qBA2BzBC,IA3ByB,EA2BnB;AACd,SAAKZ,KAAL,CAAWa,IAAX,CAAgBD,IAAhB;AACD,GA7BkC;AA8BnCE,EAAAA,UA9BmC,wBA8BtB;AACX,WAAO,KAAP;AACD;AAhCkC,CAArC","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\n//   <t xml:space=\"preserve\"> is </t>\n\nconst TextXform = (module.exports = function() {});\n\nutils.inherits(TextXform, BaseXform, {\n  get tag() {\n    return 't';\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode('t');\n    if (model[0] === ' ' || model[model.length - 1] === ' ') {\n      xmlStream.addAttribute('xml:space', 'preserve');\n    }\n    xmlStream.writeText(model);\n    xmlStream.closeNode();\n  },\n\n  get model() {\n    return this._text.join('').replace(/_x([0-9A-F]{4})_/g, ($0, $1) => String.fromCharCode(parseInt($1, 16)));\n  },\n\n  parseOpen(node) {\n    switch (node.name) {\n      case 't':\n        this._text = [];\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    this._text.push(text);\n  },\n  parseClose() {\n    return false;\n  },\n});\n"],"file":"text-xform.js"}