{"version":3,"sources":["../../../../../lib/xlsx/xform/strings/rich-text-xform.js"],"names":["TextXform","require","FontXform","utils","BaseXform","RichTextXform","module","exports","model","FONT_OPTIONS","tagName","fontNameTag","inherits","tag","textXform","_textXform","fontXform","_fontXform","render","xmlStream","openNode","font","text","closeNode","parseOpen","node","parser","name","parseText","parseClose","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nconst TextXform = require('./text-xform');\nconst FontXform = require('../style/font-xform');\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\n// <r>\n//   <rPr>\n//     <sz val=\"11\"/>\n//     <color theme=\"1\" tint=\"5\"/>\n//     <rFont val=\"Calibri\"/>\n//     <family val=\"2\"/>\n//     <scheme val=\"minor\"/>\n//   </rPr>\n//   <t xml:space=\"preserve\"> is </t>\n// </r>\n\nconst RichTextXform = (module.exports = function(model) {\n  this.model = model;\n});\n\nRichTextXform.FONT_OPTIONS = {\n  tagName: 'rPr',\n  fontNameTag: 'rFont',\n};\n\nutils.inherits(RichTextXform, BaseXform, {\n  get tag() {\n    return 'r';\n  },\n\n  get textXform() {\n    return this._textXform || (this._textXform = new TextXform());\n  },\n  get fontXform() {\n    return this._fontXform || (this._fontXform = new FontXform(RichTextXform.FONT_OPTIONS));\n  },\n\n  render(xmlStream, model) {\n    model = model || this.model;\n\n    xmlStream.openNode('r');\n    if (model.font) {\n      this.fontXform.render(xmlStream, model.font);\n    }\n    this.textXform.render(xmlStream, model.text);\n    xmlStream.closeNode();\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'r':\n        this.model = {};\n        return true;\n      case 't':\n        this.parser = this.textXform;\n        this.parser.parseOpen(node);\n        return true;\n      case 'rPr':\n        this.parser = this.fontXform;\n        this.parser.parseOpen(node);\n        return true;\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose(name) {\n    switch (name) {\n      case 'r':\n        return false;\n      case 't':\n        this.model.text = this.parser.model;\n        this.parser = undefined;\n        return true;\n      case 'rPr':\n        this.model.font = this.parser.model;\n        this.parser = undefined;\n        return true;\n      default:\n        if (this.parser) {\n          this.parser.parseClose(name);\n        }\n        return true;\n    }\n  },\n});\n"],"file":"rich-text-xform.js"}