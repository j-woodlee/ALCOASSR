{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/cell-xform.js"],"names":["utils","require","BaseXform","Enums","Range","RichTextXform","getValueType","v","undefined","ValueType","Null","String","Number","Boolean","Date","text","hyperlink","Hyperlink","formula","Formula","error","Error","getEffectiveCellType","cell","type","result","CellXform","module","exports","richTextXForm","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","comment","comments","push","ref","address","sharedStrings","ssId","add","value","date1904","hyperlinks","Object","assign","target","tooltip","Merge","merges","formulae","sharedFormula","master","si","expandToAddress","siFormulae","renderFormula","xmlStream","attrs","t","range","leafNode","addAttribute","dateToExcel","render","openNode","richText","self","forEach","closeNode","parseOpen","node","parser","name","attributes","r","s","parseInt","currentNode","parseText","parseClose","xmlDecode","parseFloat","reconcile","getStyleModel","getString","RichText","isDateFmt","numFmt","excelToDate","hyperlinkMap","commentsMap"],"mappings":"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","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nconst Enums = require('../../../doc/enums');\nconst Range = require('../../../doc/range');\n\nconst RichTextXform = require('../strings/rich-text-xform');\n\nfunction getValueType(v) {\n  if (v === null || v === undefined) {\n    return Enums.ValueType.Null;\n  }\n  if (v instanceof String || typeof v === 'string') {\n    return Enums.ValueType.String;\n  }\n  if (typeof v === 'number') {\n    return Enums.ValueType.Number;\n  }\n  if (typeof v === 'boolean') {\n    return Enums.ValueType.Boolean;\n  }\n  if (v instanceof Date) {\n    return Enums.ValueType.Date;\n  }\n  if (v.text && v.hyperlink) {\n    return Enums.ValueType.Hyperlink;\n  }\n  if (v.formula) {\n    return Enums.ValueType.Formula;\n  }\n  if (v.error) {\n    return Enums.ValueType.Error;\n  }\n  throw new Error('I could not understand type of value');\n}\n\nfunction getEffectiveCellType(cell) {\n  switch (cell.type) {\n    case Enums.ValueType.Formula:\n      return getValueType(cell.result);\n    default:\n      return cell.type;\n  }\n}\n\nconst CellXform = (module.exports = function() {\n  this.richTextXForm = new RichTextXform();\n});\n\nutils.inherits(CellXform, BaseXform, {\n  get tag() {\n    return 'c';\n  },\n\n  prepare(model, options) {\n    const styleId = options.styles.addStyleModel(model.style || {}, getEffectiveCellType(model));\n    if (styleId) {\n      model.styleId = styleId;\n    }\n\n    if (model.comment) {\n      options.comments.push({ ...model.comment, ref: model.address });\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.value);\n        }\n        break;\n      case Enums.ValueType.Date:\n        if (options.date1904) {\n          model.date1904 = true;\n        }\n        break;\n      case Enums.ValueType.Hyperlink:\n        if (options.sharedStrings) {\n          model.ssId = options.sharedStrings.add(model.text);\n        }\n        options.hyperlinks.push(\n          Object.assign(\n            {\n              address: model.address,\n              target: model.hyperlink,\n            },\n            model.tooltip ? { tooltip: model.tooltip } : {}\n          )\n        );\n        break;\n      case Enums.ValueType.Merge:\n        options.merges.add(model);\n        break;\n      case Enums.ValueType.Formula:\n        if (options.date1904) {\n          // in case valueType is date\n          model.date1904 = true;\n        }\n        if (model.formula) {\n          options.formulae[model.address] = model;\n        } else if (model.sharedFormula) {\n          const master = options.formulae[model.sharedFormula];\n          if (!master) {\n            throw new Error('Shared Formula master must exist above and or left of clone');\n          }\n          if (master.si !== undefined) {\n            model.si = master.si;\n            master.ref.expandToAddress(model.address);\n          } else {\n            model.si = master.si = options.siFormulae++;\n            master.ref = new Range(master.address, model.address);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  renderFormula(xmlStream, model) {\n    let attrs = null;\n    if (model.ref) {\n      attrs = {\n        t: 'shared',\n        ref: model.ref.range,\n        si: model.si,\n      };\n    } else if (model.si !== undefined) {\n      attrs = {\n        t: 'shared',\n        si: model.si,\n      };\n    }\n    switch (getValueType(model.result)) {\n      case Enums.ValueType.Null: // ?\n        xmlStream.leafNode('f', attrs, model.formula);\n        break;\n      case Enums.ValueType.String:\n        // oddly, formula results don't ever use shared strings\n        xmlStream.addAttribute('t', 'str');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result);\n        break;\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result ? 1 : 0);\n        break;\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, model.result.error);\n        break;\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('f', attrs, model.formula);\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.result, model.date1904));\n        break;\n      // case Enums.ValueType.Hyperlink: // ??\n      // case Enums.ValueType.Formula:\n      default:\n        throw new Error('I could not understand type of value');\n    }\n  },\n\n  render(xmlStream, model) {\n    if (model.type === Enums.ValueType.Null && !model.styleId) {\n      // if null and no style, exit\n      return;\n    }\n\n    xmlStream.openNode('c');\n    xmlStream.addAttribute('r', model.address);\n\n    if (model.styleId) {\n      xmlStream.addAttribute('s', model.styleId);\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.Null:\n        break;\n\n      case Enums.ValueType.Number:\n        xmlStream.leafNode('v', null, model.value);\n        break;\n\n      case Enums.ValueType.Boolean:\n        xmlStream.addAttribute('t', 'b');\n        xmlStream.leafNode('v', null, model.value ? '1' : '0');\n        break;\n\n      case Enums.ValueType.Error:\n        xmlStream.addAttribute('t', 'e');\n        xmlStream.leafNode('v', null, model.value.error);\n        break;\n\n      case Enums.ValueType.String:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else if (model.value && model.value.richText) {\n          xmlStream.addAttribute('t', 'inlineStr');\n          xmlStream.openNode('is');\n          const self = this;\n          model.value.richText.forEach(text => {\n            self.richTextXForm.render(xmlStream, text);\n          });\n          xmlStream.closeNode('is');\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.value);\n        }\n        break;\n\n      case Enums.ValueType.Date:\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.value, model.date1904));\n        break;\n\n      case Enums.ValueType.Hyperlink:\n        if (model.ssId !== undefined) {\n          xmlStream.addAttribute('t', 's');\n          xmlStream.leafNode('v', null, model.ssId);\n        } else {\n          xmlStream.addAttribute('t', 'str');\n          xmlStream.leafNode('v', null, model.text);\n        }\n        break;\n\n      case Enums.ValueType.Formula:\n        this.renderFormula(xmlStream, model);\n        break;\n\n      case Enums.ValueType.Merge:\n        // nothing to add\n        break;\n\n      default:\n        break;\n    }\n\n    xmlStream.closeNode(); // </c>\n  },\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'c':\n        // const address = colCache.decodeAddress(node.attributes.r);\n        this.model = {\n          address: node.attributes.r,\n        };\n        this.t = node.attributes.t;\n        if (node.attributes.s) {\n          this.model.styleId = parseInt(node.attributes.s, 10);\n        }\n        return true;\n\n      case 'f':\n        this.currentNode = 'f';\n        this.model.si = node.attributes.si;\n        if (node.attributes.t === 'shared') {\n          this.model.sharedFormula = true;\n        }\n        this.model.ref = node.attributes.ref;\n        return true;\n\n      case 'v':\n        this.currentNode = 'v';\n        return true;\n\n      case 't':\n        this.currentNode = 't';\n        return true;\n\n      case 'r':\n        this.parser = this.richTextXForm;\n        this.parser.parseOpen(node);\n        return true;\n\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n      return;\n    }\n    switch (this.currentNode) {\n      case 'f':\n        this.model.formula = this.model.formula ? this.model.formula + text : text;\n        break;\n      case 'v':\n      case 't':\n        if (this.model.value && this.model.value.richText) {\n          this.model.value.richText.text = this.model.value.richText.text ? this.model.value.richText.text + text : text;\n        } else {\n          this.model.value = this.model.value ? this.model.value + text : text;\n        }\n        break;\n      default:\n        break;\n    }\n  },\n  parseClose(name) {\n    switch (name) {\n      case 'c': {\n        const {model} = this;\n\n        // first guess on cell type\n        if (model.formula || model.sharedFormula) {\n          model.type = Enums.ValueType.Formula;\n          if (model.value) {\n            if (this.t === 'str') {\n              model.result = utils.xmlDecode(model.value);\n            } else if (this.t === 'b') {\n              model.result = parseInt(model.value, 10) !== 0;\n            } else if (this.t === 'e') {\n              model.result = {error: model.value};\n            } else {\n              model.result = parseFloat(model.value);\n            }\n            model.value = undefined;\n          }\n        } else if (model.value !== undefined) {\n          switch (this.t) {\n            case 's':\n              model.type = Enums.ValueType.String;\n              model.value = parseInt(model.value, 10);\n              break;\n            case 'str':\n              model.type = Enums.ValueType.String;\n              model.value = utils.xmlDecode(model.value);\n              break;\n            case 'inlineStr':\n              model.type = Enums.ValueType.String;\n              break;\n            case 'b':\n              model.type = Enums.ValueType.Boolean;\n              model.value = parseInt(model.value, 10) !== 0;\n              break;\n            case 'e':\n              model.type = Enums.ValueType.Error;\n              model.value = {error: model.value};\n              break;\n            default:\n              model.type = Enums.ValueType.Number;\n              model.value = parseFloat(model.value);\n              break;\n          }\n        } else if (model.styleId) {\n          model.type = Enums.ValueType.Null;\n        } else {\n          model.type = Enums.ValueType.Merge;\n        }\n        return false;\n      }\n\n      case 'f':\n      case 'v':\n      case 'is':\n        this.currentNode = undefined;\n        return true;\n\n      case 't':\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        this.currentNode = undefined;\n        return true;\n\n      case 'r':\n        this.model.value = this.model.value || {};\n        this.model.value.richText = this.model.value.richText || [];\n        this.model.value.richText.push(this.parser.model);\n        this.parser = undefined;\n        this.currentNode = undefined;\n        return true;\n\n      default:\n        if (this.parser) {\n          this.parser.parseClose(name);\n          return true;\n        }\n        return false;\n    }\n  },\n\n  reconcile(model, options) {\n    const style = model.styleId && options.styles && options.styles.getStyleModel(model.styleId);\n    if (style) {\n      model.style = style;\n    }\n    if (model.styleId !== undefined) {\n      model.styleId = undefined;\n    }\n\n    switch (model.type) {\n      case Enums.ValueType.String:\n        if (typeof model.value === 'number') {\n          if (options.sharedStrings) {\n            model.value = options.sharedStrings.getString(model.value);\n          }\n        }\n        if (model.value.richText) {\n          model.type = Enums.ValueType.RichText;\n        }\n        break;\n      case Enums.ValueType.Number:\n        if (style && utils.isDateFmt(style.numFmt)) {\n          model.type = Enums.ValueType.Date;\n          model.value = utils.excelToDate(model.value, options.date1904);\n        }\n        break;\n      case Enums.ValueType.Formula:\n        if (model.result !== undefined && style && utils.isDateFmt(style.numFmt)) {\n          model.result = utils.excelToDate(model.result, options.date1904);\n        }\n        if (model.sharedFormula) {\n          if (model.formula) {\n            options.formulae[model.si] = model;\n            delete model.sharedFormula;\n          } else {\n            model.sharedFormula = options.formulae[model.si].address;\n          }\n          delete model.si;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // look for hyperlink\n    const hyperlink = options.hyperlinkMap[model.address];\n    if (hyperlink) {\n      if (model.type === Enums.ValueType.Formula) {\n        model.text = model.result;\n        model.result = undefined;\n      } else {\n        model.text = model.value;\n        model.value = undefined;\n      }\n      model.type = Enums.ValueType.Hyperlink;\n      model.hyperlink = hyperlink;\n    }\n\n    const comment = options.commentsMap && options.commentsMap[model.address];\n    if (comment) {\n      model.comment = comment;\n    }\n  },\n});\n"],"file":"cell-xform.js"}