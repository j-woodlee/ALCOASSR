{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/data-validations-xform.js"],"names":["_","require","utils","BaseXform","assign","definedName","attributes","name","defaultValue","value","undefined","parseBool","assignBool","DataValidationsXform","module","exports","inherits","tag","render","xmlStream","model","count","Object","keys","length","openNode","each","address","type","addAttribute","operator","allowBlank","showInputMessage","promptTitle","prompt","showErrorMessage","errorStyle","errorTitle","error","formulae","forEach","formula","index","writeText","dateToExcel","closeNode","parseOpen","node","_address","sqref","_definedName","_formula","parseText","text","push","parseClose","join","parseInt","parseFloat","excelToDate"],"mappings":"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","sourcesContent":["'use strict';\n\nconst _ = require('../../../utils/under-dash');\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nfunction assign(definedName, attributes, name, defaultValue) {\n  const value = attributes[name];\n  if (value !== undefined) {\n    definedName[name] = value;\n  } else if (defaultValue !== undefined) {\n    definedName[name] = defaultValue;\n  }\n}\nfunction parseBool(value) {\n  switch (value) {\n    case '1':\n    case 'true':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction assignBool(definedName, attributes, name, defaultValue) {\n  const value = attributes[name];\n  if (value !== undefined) {\n    definedName[name] = parseBool(value);\n  } else if (defaultValue !== undefined) {\n    definedName[name] = defaultValue;\n  }\n}\n\nconst DataValidationsXform = (module.exports = function() {});\n\nutils.inherits(DataValidationsXform, BaseXform, {\n  get tag() {\n    return 'dataValidations';\n  },\n\n  render(xmlStream, model) {\n    const count = model && Object.keys(model).length;\n    if (count) {\n      xmlStream.openNode('dataValidations', { count });\n\n      _.each(model, (value, address) => {\n        xmlStream.openNode('dataValidation');\n        if (value.type !== 'any') {\n          xmlStream.addAttribute('type', value.type);\n\n          if (value.operator && value.type !== 'list' && value.operator !== 'between') {\n            xmlStream.addAttribute('operator', value.operator);\n          }\n          if (value.allowBlank) {\n            xmlStream.addAttribute('allowBlank', '1');\n          }\n        }\n        if (value.showInputMessage) {\n          xmlStream.addAttribute('showInputMessage', '1');\n        }\n        if (value.promptTitle) {\n          xmlStream.addAttribute('promptTitle', value.promptTitle);\n        }\n        if (value.prompt) {\n          xmlStream.addAttribute('prompt', value.prompt);\n        }\n        if (value.showErrorMessage) {\n          xmlStream.addAttribute('showErrorMessage', '1');\n        }\n        if (value.errorStyle) {\n          xmlStream.addAttribute('errorStyle', value.errorStyle);\n        }\n        if (value.errorTitle) {\n          xmlStream.addAttribute('errorTitle', value.errorTitle);\n        }\n        if (value.error) {\n          xmlStream.addAttribute('error', value.error);\n        }\n        xmlStream.addAttribute('sqref', address);\n        (value.formulae || []).forEach((formula, index) => {\n          xmlStream.openNode(`formula${index + 1}`);\n          if (value.type === 'date') {\n            xmlStream.writeText(utils.dateToExcel(formula));\n          } else {\n            xmlStream.writeText(formula);\n          }\n          xmlStream.closeNode();\n        });\n        xmlStream.closeNode();\n      });\n      xmlStream.closeNode();\n    }\n  },\n  parseOpen(node) {\n    switch (node.name) {\n      case 'dataValidations':\n        this.model = {};\n        return true;\n\n      case 'dataValidation':\n        this._address = node.attributes.sqref;\n        const definedName = node.attributes.type\n          ? {\n              type: node.attributes.type,\n              formulae: [],\n            }\n          : {\n              type: 'any',\n            };\n\n        if (node.attributes.type) {\n          assignBool(definedName, node.attributes, 'allowBlank');\n        }\n        assignBool(definedName, node.attributes, 'showInputMessage');\n        assignBool(definedName, node.attributes, 'showErrorMessage');\n\n        switch (definedName.type) {\n          case 'any':\n          case 'list':\n          case 'custom':\n            break;\n          default:\n            assign(definedName, node.attributes, 'operator', 'between');\n            break;\n        }\n        assign(definedName, node.attributes, 'promptTitle');\n        assign(definedName, node.attributes, 'prompt');\n        assign(definedName, node.attributes, 'errorStyle');\n        assign(definedName, node.attributes, 'errorTitle');\n        assign(definedName, node.attributes, 'error');\n\n        this._definedName = definedName;\n        return true;\n      case 'formula1':\n      case 'formula2':\n        this._formula = [];\n        return true;\n\n      default:\n        return false;\n    }\n  },\n  parseText(text) {\n    this._formula.push(text);\n  },\n  parseClose(name) {\n    switch (name) {\n      case 'dataValidations':\n        return false;\n      case 'dataValidation':\n        if (!this._definedName.formulae || !this._definedName.formulae.length) {\n          delete this._definedName.formulae;\n          delete this._definedName.operator;\n        }\n        this.model[this._address] = this._definedName;\n        return true;\n      case 'formula1':\n      case 'formula2': {\n        let formula = this._formula.join('');\n        switch (this._definedName.type) {\n          case 'whole':\n          case 'textLength':\n            formula = parseInt(formula, 10);\n            break;\n          case 'decimal':\n            formula = parseFloat(formula);\n            break;\n          case 'date':\n            formula = utils.excelToDate(parseFloat(formula));\n            break;\n          default:\n            break;\n        }\n        this._definedName.formulae.push(formula);\n        return true;\n      }\n      default:\n        return true;\n    }\n  },\n});\n"],"file":"data-validations-xform.js"}