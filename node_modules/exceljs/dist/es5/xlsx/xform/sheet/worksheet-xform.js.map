{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/worksheet-xform.js"],"names":["_","require","colCache","XmlStream","RelType","Merges","BaseXform","ListXform","RowXform","ColXform","DimensionXform","HyperlinkXform","MergeCellXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","SheetViewXform","PageMarginsXform","PageSetupXform","PrintOptionsXform","AutoFilterXform","PictureXform","DrawingXform","RowBreaksXform","WorkSheetXform","options","maxRows","maxCols","map","sheetPr","dimension","sheetViews","tag","count","childXform","sheetFormatPr","cols","sheetData","empty","maxItems","autoFilter","mergeCells","rowBreaks","hyperlinks","pageMargins","dataValidations","pageSetup","printOptions","picture","drawing","model","merges","comments","formulae","siFormulae","prepare","rows","rels","nextRid","r","length","forEach","hyperlink","rId","push","Id","Type","Hyperlink","Target","target","TargetMode","comment","Comments","id","vmlDrawing","VmlDrawing","item","refAddress","decodeAddress","ref","commentRefs","commentName","drawingRelsHash","bookImage","media","medium","type","imageId","Image","name","extension","background","image","drawingsCount","anchors","drawings","rIdImage","range","xmlStream","openXml","StdDocAttributes","openNode","WORKSHEET_ATTRIBUTES","sheetFormatPropertiesModel","properties","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","undefined","sheetPropertiesModel","outlineProperties","tabColor","fitToPage","pageMarginsModel","margins","printOptionsModel","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","render","dimensions","views","rel","leafNode","closeNode","node","parser","parseOpen","each","xform","reset","text","parseText","parseClose","outlinePropertiesx","sheetProperties","Object","assign","relationships","reduce","h","commentsMap","hyperlinkMap","address","filter","Boolean","row","cells","reconcile","drawingRel","match","drawingName","anchor","index","backgroundRel","split","mediaIndex","xmlns","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAC,2BAAD,CAAjB;;AAEA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,2BAAD,CAAzB;;AAEA,IAAMG,OAAO,GAAGH,OAAO,CAAC,gBAAD,CAAvB;;AAEA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMK,SAAS,GAAGL,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMM,SAAS,GAAGN,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMO,QAAQ,GAAGP,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAMQ,QAAQ,GAAGR,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAMS,cAAc,GAAGT,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAMU,cAAc,GAAGV,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAMW,cAAc,GAAGX,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAMY,oBAAoB,GAAGZ,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAMa,oBAAoB,GAAGb,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAMc,0BAA0B,GAAGd,OAAO,CAAC,iCAAD,CAA1C;;AACA,IAAMe,cAAc,GAAGf,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAMgB,gBAAgB,GAAGhB,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAMiB,cAAc,GAAGjB,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAMkB,iBAAiB,GAAGlB,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAMmB,eAAe,GAAGnB,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAMoB,YAAY,GAAGpB,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAMqB,YAAY,GAAGrB,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAMsB,cAAc,GAAGtB,OAAO,CAAC,oBAAD,CAA9B;;IAEMuB,c;;;;;AACJ,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;;AADmB,eAGQA,OAAO,IAAI,EAHnB;AAAA,QAGZC,OAHY,QAGZA,OAHY;AAAA,QAGHC,OAHG,QAGHA,OAHG;;AAInB,UAAKC,GAAL,GAAW;AACTC,MAAAA,OAAO,EAAE,IAAIf,oBAAJ,EADA;AAETgB,MAAAA,SAAS,EAAE,IAAIpB,cAAJ,EAFF;AAGTqB,MAAAA,UAAU,EAAE,IAAIxB,SAAJ,CAAc;AAACyB,QAAAA,GAAG,EAAE,YAAN;AAAoBC,QAAAA,KAAK,EAAE,KAA3B;AAAkCC,QAAAA,UAAU,EAAE,IAAIlB,cAAJ;AAA9C,OAAd,CAHH;AAITmB,MAAAA,aAAa,EAAE,IAAIpB,0BAAJ,EAJN;AAKTqB,MAAAA,IAAI,EAAE,IAAI7B,SAAJ,CAAc;AAACyB,QAAAA,GAAG,EAAE,MAAN;AAAcC,QAAAA,KAAK,EAAE,KAArB;AAA4BC,QAAAA,UAAU,EAAE,IAAIzB,QAAJ;AAAxC,OAAd,CALG;AAMT4B,MAAAA,SAAS,EAAE,IAAI9B,SAAJ,CAAc;AACvByB,QAAAA,GAAG,EAAE,WADkB;AAEvBC,QAAAA,KAAK,EAAE,KAFgB;AAGvBK,QAAAA,KAAK,EAAE,IAHgB;AAIvBJ,QAAAA,UAAU,EAAE,IAAI1B,QAAJ,CAAa;AAAC+B,UAAAA,QAAQ,EAAEZ;AAAX,SAAb,CAJW;AAKvBY,QAAAA,QAAQ,EAAEb;AALa,OAAd,CANF;AAaTc,MAAAA,UAAU,EAAE,IAAIpB,eAAJ,EAbH;AAcTqB,MAAAA,UAAU,EAAE,IAAIlC,SAAJ,CAAc;AAACyB,QAAAA,GAAG,EAAE,YAAN;AAAoBC,QAAAA,KAAK,EAAE,IAA3B;AAAiCC,QAAAA,UAAU,EAAE,IAAItB,cAAJ;AAA7C,OAAd,CAdH;AAeT8B,MAAAA,SAAS,EAAE,IAAInB,cAAJ,EAfF;AAgBToB,MAAAA,UAAU,EAAE,IAAIpC,SAAJ,CAAc;AAACyB,QAAAA,GAAG,EAAE,YAAN;AAAoBC,QAAAA,KAAK,EAAE,KAA3B;AAAkCC,QAAAA,UAAU,EAAE,IAAIvB,cAAJ;AAA9C,OAAd,CAhBH;AAiBTiC,MAAAA,WAAW,EAAE,IAAI3B,gBAAJ,EAjBJ;AAkBT4B,MAAAA,eAAe,EAAE,IAAIhC,oBAAJ,EAlBR;AAmBTiC,MAAAA,SAAS,EAAE,IAAI5B,cAAJ,EAnBF;AAoBT6B,MAAAA,YAAY,EAAE,IAAI5B,iBAAJ,EApBL;AAqBT6B,MAAAA,OAAO,EAAE,IAAI3B,YAAJ,EArBA;AAsBT4B,MAAAA,OAAO,EAAE,IAAI3B,YAAJ;AAtBA,KAAX;AAJmB;AA4BpB;;;;4BAEO4B,K,EAAOzB,O,EAAS;AACtBA,MAAAA,OAAO,CAAC0B,MAAR,GAAiB,IAAI9C,MAAJ,EAAjB;AACA6C,MAAAA,KAAK,CAACP,UAAN,GAAmBlB,OAAO,CAACkB,UAAR,GAAqB,EAAxC;AACAO,MAAAA,KAAK,CAACE,QAAN,GAAiB3B,OAAO,CAAC2B,QAAR,GAAmB,EAApC;AAEA3B,MAAAA,OAAO,CAAC4B,QAAR,GAAmB,EAAnB;AACA5B,MAAAA,OAAO,CAAC6B,UAAR,GAAqB,CAArB;AACA,WAAK1B,GAAL,CAASQ,IAAT,CAAcmB,OAAd,CAAsBL,KAAK,CAACd,IAA5B,EAAkCX,OAAlC;AACA,WAAKG,GAAL,CAASS,SAAT,CAAmBkB,OAAnB,CAA2BL,KAAK,CAACM,IAAjC,EAAuC/B,OAAvC;AAEAyB,MAAAA,KAAK,CAACT,UAAN,GAAmBhB,OAAO,CAAC0B,MAAR,CAAeV,UAAlC,CAVsB,CAYtB;;AACA,UAAMgB,IAAI,GAAIP,KAAK,CAACO,IAAN,GAAa,EAA3B;;AAEA,eAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,4BAAaA,CAAC,CAACC,MAAF,GAAW,CAAxB;AACD;;AAEDV,MAAAA,KAAK,CAACP,UAAN,CAAiBkB,OAAjB,CAAyB,UAAAC,SAAS,EAAI;AACpC,YAAMC,GAAG,GAAGL,OAAO,CAACD,IAAD,CAAnB;AACAK,QAAAA,SAAS,CAACC,GAAV,GAAgBA,GAAhB;AACAN,QAAAA,IAAI,CAACO,IAAL,CAAU;AACRC,UAAAA,EAAE,EAAEF,GADI;AAERG,UAAAA,IAAI,EAAE9D,OAAO,CAAC+D,SAFN;AAGRC,UAAAA,MAAM,EAAEN,SAAS,CAACO,MAHV;AAIRC,UAAAA,UAAU,EAAE;AAJJ,SAAV;AAMD,OATD,EAnBsB,CA8BtB;;AACA,UAAIpB,KAAK,CAACE,QAAN,CAAeQ,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,YAAMW,OAAO,GAAG;AACdN,UAAAA,EAAE,EAAEP,OAAO,CAACD,IAAD,CADG;AAEdS,UAAAA,IAAI,EAAE9D,OAAO,CAACoE,QAFA;AAGdJ,UAAAA,MAAM,uBAAgBlB,KAAK,CAACuB,EAAtB;AAHQ,SAAhB;AAKAhB,QAAAA,IAAI,CAACO,IAAL,CAAUO,OAAV;AACA,YAAMG,UAAU,GAAG;AACjBT,UAAAA,EAAE,EAAEP,OAAO,CAACD,IAAD,CADM;AAEjBS,UAAAA,IAAI,EAAE9D,OAAO,CAACuE,UAFG;AAGjBP,UAAAA,MAAM,kCAA2BlB,KAAK,CAACuB,EAAjC;AAHW,SAAnB;AAKAhB,QAAAA,IAAI,CAACO,IAAL,CAAUU,UAAV;AAEAxB,QAAAA,KAAK,CAACE,QAAN,CAAeS,OAAf,CAAuB,UAAAe,IAAI,EAAI;AAC7BA,UAAAA,IAAI,CAACC,UAAL,GAAkB3E,QAAQ,CAAC4E,aAAT,CAAuBF,IAAI,CAACG,GAA5B,CAAlB;AACD,SAFD;AAIAtD,QAAAA,OAAO,CAACuD,WAAR,CAAoBhB,IAApB,CAAyB;AACvBiB,UAAAA,WAAW,oBAAa/B,KAAK,CAACuB,EAAnB,CADY;AAEvBC,UAAAA,UAAU,sBAAexB,KAAK,CAACuB,EAArB;AAFa,SAAzB;AAID;;AAED,UAAMS,eAAe,GAAG,EAAxB;AACA,UAAIC,SAAJ;AACAjC,MAAAA,KAAK,CAACkC,KAAN,CAAYvB,OAAZ,CAAoB,UAAAwB,MAAM,EAAI;AAC5B,YAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,cAAMvB,GAAG,GAAGL,OAAO,CAACD,IAAD,CAAnB;AACA0B,UAAAA,SAAS,GAAG1D,OAAO,CAAC2D,KAAR,CAAcC,MAAM,CAACE,OAArB,CAAZ;AACA9B,UAAAA,IAAI,CAACO,IAAL,CAAU;AACRC,YAAAA,EAAE,EAAEF,GADI;AAERG,YAAAA,IAAI,EAAE9D,OAAO,CAACoF,KAFN;AAGRpB,YAAAA,MAAM,qBAAce,SAAS,CAACM,IAAxB,cAAgCN,SAAS,CAACO,SAA1C;AAHE,WAAV;AAKAxC,UAAAA,KAAK,CAACyC,UAAN,GAAmB;AACjB5B,YAAAA,GAAG,EAAHA;AADiB,WAAnB;AAGAb,UAAAA,KAAK,CAAC0C,KAAN,GAAcnE,OAAO,CAAC2D,KAAR,CAAcC,MAAM,CAACE,OAArB,CAAd;AACD,SAZD,MAYO,IAAIF,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAAA,cAC7BrC,OAD6B,GAClBC,KADkB,CAC7BD,OAD6B;AAElCkC,UAAAA,SAAS,GAAG1D,OAAO,CAAC2D,KAAR,CAAcC,MAAM,CAACE,OAArB,CAAZ;;AACA,cAAI,CAACtC,OAAL,EAAc;AACZA,YAAAA,OAAO,GAAGC,KAAK,CAACD,OAAN,GAAgB;AACxBc,cAAAA,GAAG,EAAEL,OAAO,CAACD,IAAD,CADY;AAExBgC,cAAAA,IAAI,mBAAY,EAAEhE,OAAO,CAACoE,aAAtB,CAFoB;AAGxBC,cAAAA,OAAO,EAAE,EAHe;AAIxBrC,cAAAA,IAAI,EAAE;AAJkB,aAA1B;AAMAhC,YAAAA,OAAO,CAACsE,QAAR,CAAiB/B,IAAjB,CAAsBf,OAAtB;AACAQ,YAAAA,IAAI,CAACO,IAAL,CAAU;AACRC,cAAAA,EAAE,EAAEhB,OAAO,CAACc,GADJ;AAERG,cAAAA,IAAI,EAAE,6EAFE;AAGRE,cAAAA,MAAM,wBAAiBnB,OAAO,CAACwC,IAAzB;AAHE,aAAV;AAKD;;AACD,cAAIO,QAAQ,GAAGd,eAAe,CAACG,MAAM,CAACE,OAAR,CAA9B;;AACA,cAAI,CAACS,QAAL,EAAe;AACbA,YAAAA,QAAQ,GAAGtC,OAAO,CAACT,OAAO,CAACQ,IAAT,CAAlB;AACAyB,YAAAA,eAAe,CAACG,MAAM,CAACE,OAAR,CAAf,GAAkCS,QAAlC;AACA/C,YAAAA,OAAO,CAACQ,IAAR,CAAaO,IAAb,CAAkB;AAChBC,cAAAA,EAAE,EAAE+B,QADY;AAEhB9B,cAAAA,IAAI,EAAE,2EAFU;AAGhBE,cAAAA,MAAM,qBAAce,SAAS,CAACM,IAAxB,cAAgCN,SAAS,CAACO,SAA1C;AAHU,aAAlB;AAKD;;AACDzC,UAAAA,OAAO,CAAC6C,OAAR,CAAgB9B,IAAhB,CAAqB;AACnBhB,YAAAA,OAAO,EAAE;AACPe,cAAAA,GAAG,EAAEiC;AADE,aADU;AAInBC,YAAAA,KAAK,EAAEZ,MAAM,CAACY;AAJK,WAArB;AAMD;AACF,OA/CD;AAgDD;;;2BAEMC,S,EAAWhD,K,EAAO;AACvBgD,MAAAA,SAAS,CAACC,OAAV,CAAkBhG,SAAS,CAACiG,gBAA5B;AACAF,MAAAA,SAAS,CAACG,QAAV,CAAmB,WAAnB,EAAgC7E,cAAc,CAAC8E,oBAA/C;AAEA,UAAMC,0BAA0B,GAAGrD,KAAK,CAACsD,UAAN,GAC/B;AACAC,QAAAA,gBAAgB,EAAEvD,KAAK,CAACsD,UAAN,CAAiBC,gBADnC;AAEAC,QAAAA,SAAS,EAAExD,KAAK,CAACsD,UAAN,CAAiBE,SAF5B;AAGAC,QAAAA,eAAe,EAAEzD,KAAK,CAACsD,UAAN,CAAiBG,eAHlC;AAIAC,QAAAA,eAAe,EAAE1D,KAAK,CAACsD,UAAN,CAAiBI;AAJlC,OAD+B,GAO/BC,SAPJ;AAQA,UAAMC,oBAAoB,GAAG;AAC3BC,QAAAA,iBAAiB,EAAE7D,KAAK,CAACsD,UAAN,IAAoBtD,KAAK,CAACsD,UAAN,CAAiBO,iBAD7B;AAE3BC,QAAAA,QAAQ,EAAE9D,KAAK,CAACsD,UAAN,IAAoBtD,KAAK,CAACsD,UAAN,CAAiBQ,QAFpB;AAG3BlE,QAAAA,SAAS,EACPI,KAAK,CAACJ,SAAN,IAAmBI,KAAK,CAACJ,SAAN,CAAgBmE,SAAnC,GACI;AACAA,UAAAA,SAAS,EAAE/D,KAAK,CAACJ,SAAN,CAAgBmE;AAD3B,SADJ,GAIIJ;AARqB,OAA7B;AAUA,UAAMK,gBAAgB,GAAGhE,KAAK,CAACJ,SAAN,IAAmBI,KAAK,CAACJ,SAAN,CAAgBqE,OAA5D;AACA,UAAMC,iBAAiB,GAAG;AACxBC,QAAAA,iBAAiB,EAAEnE,KAAK,CAACmE,iBADD;AAExBC,QAAAA,aAAa,EAAEpE,KAAK,CAACoE,aAFG;AAGxBC,QAAAA,kBAAkB,EAAErE,KAAK,CAACqE,kBAHF;AAIxBC,QAAAA,gBAAgB,EAAEtE,KAAK,CAACsE;AAJA,OAA1B;AAOA,WAAK5F,GAAL,CAASC,OAAT,CAAiB4F,MAAjB,CAAwBvB,SAAxB,EAAmCY,oBAAnC;AACA,WAAKlF,GAAL,CAASE,SAAT,CAAmB2F,MAAnB,CAA0BvB,SAA1B,EAAqChD,KAAK,CAACwE,UAA3C;AACA,WAAK9F,GAAL,CAASG,UAAT,CAAoB0F,MAApB,CAA2BvB,SAA3B,EAAsChD,KAAK,CAACyE,KAA5C;AACA,WAAK/F,GAAL,CAASO,aAAT,CAAuBsF,MAAvB,CAA8BvB,SAA9B,EAAyCK,0BAAzC;AACA,WAAK3E,GAAL,CAASQ,IAAT,CAAcqF,MAAd,CAAqBvB,SAArB,EAAgChD,KAAK,CAACd,IAAtC;AACA,WAAKR,GAAL,CAASS,SAAT,CAAmBoF,MAAnB,CAA0BvB,SAA1B,EAAqChD,KAAK,CAACM,IAA3C;AACA,WAAK5B,GAAL,CAASY,UAAT,CAAoBiF,MAApB,CAA2BvB,SAA3B,EAAsChD,KAAK,CAACV,UAA5C;AACA,WAAKZ,GAAL,CAASa,UAAT,CAAoBgF,MAApB,CAA2BvB,SAA3B,EAAsChD,KAAK,CAACT,UAA5C;AACA,WAAKb,GAAL,CAASiB,eAAT,CAAyB4E,MAAzB,CAAgCvB,SAAhC,EAA2ChD,KAAK,CAACL,eAAjD,EAtCuB,CAuCvB;;AACA,WAAKjB,GAAL,CAASe,UAAT,CAAoB8E,MAApB,CAA2BvB,SAA3B,EAAsChD,KAAK,CAACP,UAA5C;AACA,WAAKf,GAAL,CAASgB,WAAT,CAAqB6E,MAArB,CAA4BvB,SAA5B,EAAuCgB,gBAAvC;AACA,WAAKtF,GAAL,CAASmB,YAAT,CAAsB0E,MAAtB,CAA6BvB,SAA7B,EAAwCkB,iBAAxC;AACA,WAAKxF,GAAL,CAASkB,SAAT,CAAmB2E,MAAnB,CAA0BvB,SAA1B,EAAqChD,KAAK,CAACJ,SAA3C;AACA,WAAKlB,GAAL,CAASc,SAAT,CAAmB+E,MAAnB,CAA0BvB,SAA1B,EAAqChD,KAAK,CAACR,SAA3C;AACA,WAAKd,GAAL,CAASqB,OAAT,CAAiBwE,MAAjB,CAAwBvB,SAAxB,EAAmChD,KAAK,CAACD,OAAzC,EA7CuB,CA6C4B;;AACnD,WAAKrB,GAAL,CAASoB,OAAT,CAAiByE,MAAjB,CAAwBvB,SAAxB,EAAmChD,KAAK,CAACyC,UAAzC,EA9CuB,CA8C+B;;AAEtD,UAAIzC,KAAK,CAACO,IAAV,EAAgB;AACd;AACAP,QAAAA,KAAK,CAACO,IAAN,CAAWI,OAAX,CAAmB,UAAA+D,GAAG,EAAI;AACxB,cAAIA,GAAG,CAAC1D,IAAJ,KAAa9D,OAAO,CAACuE,UAAzB,EAAqC;AACnCuB,YAAAA,SAAS,CAAC2B,QAAV,CAAmB,eAAnB,EAAoC;AAAC,sBAAQD,GAAG,CAAC3D;AAAb,aAApC;AACD;AACF,SAJD;AAKD;;AAEDiC,MAAAA,SAAS,CAAC4B,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AAED,UAAIA,IAAI,CAACtC,IAAL,KAAc,WAAlB,EAA+B;AAC7BzF,QAAAA,CAAC,CAACkI,IAAF,CAAO,KAAKtG,GAAZ,EAAiB,UAAAuG,KAAK,EAAI;AACxBA,UAAAA,KAAK,CAACC,KAAN;AACD,SAFD;;AAGA,eAAO,IAAP;AACD;;AAED,WAAKJ,MAAL,GAAc,KAAKpG,GAAL,CAASmG,IAAI,CAACtC,IAAd,CAAd;;AACA,UAAI,KAAKuC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACD;;AACD,aAAO,IAAP;AACD;;;8BAESM,I,EAAM;AACd,UAAI,KAAKL,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYM,SAAZ,CAAsBD,IAAtB;AACD;AACF;;;+BAEU5C,I,EAAM;AACf,UAAI,KAAKuC,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYO,UAAZ,CAAuB9C,IAAvB,CAAL,EAAmC;AACjC,eAAKuC,MAAL,GAAcnB,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,cAAQpB,IAAR;AACE,aAAK,WAAL;AAAkB;AAChB,gBAAMe,UAAU,GAAG,KAAK5E,GAAL,CAASO,aAAT,CAAuBe,KAA1C;;AACA,gBAAI,KAAKtB,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,IAA0B,KAAKtB,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,CAAuB8D,QAArD,EAA+D;AAC7DR,cAAAA,UAAU,CAACQ,QAAX,GAAsB,KAAKpF,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,CAAuB8D,QAA7C;AACD;;AACD,gBAAI,KAAKpF,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,IAA0B,KAAKtB,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,CAAuB6D,iBAArD,EAAwE;AACtEP,cAAAA,UAAU,CAACO,iBAAX,GAA+B,KAAKnF,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,CAAuBsF,kBAAtD;AACD;;AACD,gBAAMC,eAAe,GAAG;AACtBxB,cAAAA,SAAS,EAAG,KAAKrF,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,IAA0B,KAAKtB,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,CAAuBJ,SAAjD,IAA8D,KAAKlB,GAAL,CAASC,OAAT,CAAiBqB,KAAjB,CAAuBJ,SAAvB,CAAiCmE,SAAhG,IAA8G,KADnG;AAEtBE,cAAAA,OAAO,EAAE,KAAKvF,GAAL,CAASgB,WAAT,CAAqBM;AAFR,aAAxB;AAIA,gBAAMJ,SAAS,GAAG4F,MAAM,CAACC,MAAP,CAAcF,eAAd,EAA+B,KAAK7G,GAAL,CAASkB,SAAT,CAAmBI,KAAlD,EAAyD,KAAKtB,GAAL,CAASmB,YAAT,CAAsBG,KAA/E,CAAlB;AACA,iBAAKA,KAAL,GAAa;AACXwE,cAAAA,UAAU,EAAE,KAAK9F,GAAL,CAASE,SAAT,CAAmBoB,KADpB;AAEXd,cAAAA,IAAI,EAAE,KAAKR,GAAL,CAASQ,IAAT,CAAcc,KAFT;AAGXM,cAAAA,IAAI,EAAE,KAAK5B,GAAL,CAASS,SAAT,CAAmBa,KAHd;AAIXT,cAAAA,UAAU,EAAE,KAAKb,GAAL,CAASa,UAAT,CAAoBS,KAJrB;AAKXP,cAAAA,UAAU,EAAE,KAAKf,GAAL,CAASe,UAAT,CAAoBO,KALrB;AAMXL,cAAAA,eAAe,EAAE,KAAKjB,GAAL,CAASiB,eAAT,CAAyBK,KAN/B;AAOXsD,cAAAA,UAAU,EAAVA,UAPW;AAQXmB,cAAAA,KAAK,EAAE,KAAK/F,GAAL,CAASG,UAAT,CAAoBmB,KARhB;AASXJ,cAAAA,SAAS,EAATA,SATW;AAUX6C,cAAAA,UAAU,EAAE,KAAK/D,GAAL,CAASoB,OAAT,CAAiBE,KAVlB;AAWXD,cAAAA,OAAO,EAAE,KAAKrB,GAAL,CAASqB,OAAT,CAAiBC;AAXf,aAAb;;AAcA,gBAAI,KAAKtB,GAAL,CAASY,UAAT,CAAoBU,KAAxB,EAA+B;AAC7B,mBAAKA,KAAL,CAAWV,UAAX,GAAwB,KAAKZ,GAAL,CAASY,UAAT,CAAoBU,KAA5C;AACD;;AACD,mBAAO,KAAP;AACD;;AAED;AACE;AACA,iBAAO,IAAP;AApCJ;AAsCD;;;8BAESA,K,EAAOzB,O,EAAS;AACxB;AACA;AACA,UAAMgC,IAAI,GAAG,CAACP,KAAK,CAAC0F,aAAN,IAAuB,EAAxB,EAA4BC,MAA5B,CAAmC,UAACC,CAAD,EAAIlB,GAAJ,EAAY;AAC1DkB,QAAAA,CAAC,CAAClB,GAAG,CAAC3D,EAAL,CAAD,GAAY2D,GAAZ;;AACA,YAAIA,GAAG,CAAC1D,IAAJ,KAAa9D,OAAO,CAACoE,QAAzB,EAAmC;AACjCtB,UAAAA,KAAK,CAACE,QAAN,GAAiB3B,OAAO,CAAC2B,QAAR,CAAiBwE,GAAG,CAACxD,MAArB,EAA6BhB,QAA9C;AACD;;AACD,eAAO0F,CAAP;AACD,OANY,EAMV,EANU,CAAb;AAOArH,MAAAA,OAAO,CAACsH,WAAR,GAAsB,CAAC7F,KAAK,CAACE,QAAN,IAAkB,EAAnB,EAAuByF,MAAvB,CAA8B,UAACC,CAAD,EAAIvE,OAAJ,EAAgB;AAClE,YAAIA,OAAO,CAACQ,GAAZ,EAAiB;AACf+D,UAAAA,CAAC,CAACvE,OAAO,CAACQ,GAAT,CAAD,GAAiBR,OAAjB;AACD;;AACD,eAAOuE,CAAP;AACD,OALqB,EAKnB,EALmB,CAAtB;AAMArH,MAAAA,OAAO,CAACuH,YAAR,GAAuB,CAAC9F,KAAK,CAACP,UAAN,IAAoB,EAArB,EAAyBkG,MAAzB,CAAgC,UAACC,CAAD,EAAIhF,SAAJ,EAAkB;AACvE,YAAIA,SAAS,CAACC,GAAd,EAAmB;AACjB+E,UAAAA,CAAC,CAAChF,SAAS,CAACmF,OAAX,CAAD,GAAuBxF,IAAI,CAACK,SAAS,CAACC,GAAX,CAAJ,CAAoBK,MAA3C;AACD;;AACD,eAAO0E,CAAP;AACD,OALsB,EAKpB,EALoB,CAAvB;AAMArH,MAAAA,OAAO,CAAC4B,QAAR,GAAmB,EAAnB,CAtBwB,CAwBxB;;AACAH,MAAAA,KAAK,CAACM,IAAN,GAAcN,KAAK,CAACM,IAAN,IAAcN,KAAK,CAACM,IAAN,CAAW0F,MAAX,CAAkBC,OAAlB,CAAf,IAA8C,EAA3D;AACAjG,MAAAA,KAAK,CAACM,IAAN,CAAWK,OAAX,CAAmB,UAAAuF,GAAG,EAAI;AACxBA,QAAAA,GAAG,CAACC,KAAJ,GAAaD,GAAG,CAACC,KAAJ,IAAaD,GAAG,CAACC,KAAJ,CAAUH,MAAV,CAAiBC,OAAjB,CAAd,IAA4C,EAAxD;AACD,OAFD;AAIA,WAAKvH,GAAL,CAASQ,IAAT,CAAckH,SAAd,CAAwBpG,KAAK,CAACd,IAA9B,EAAoCX,OAApC;AACA,WAAKG,GAAL,CAASS,SAAT,CAAmBiH,SAAnB,CAA6BpG,KAAK,CAACM,IAAnC,EAAyC/B,OAAzC;AAEAyB,MAAAA,KAAK,CAACkC,KAAN,GAAc,EAAd;;AACA,UAAIlC,KAAK,CAACD,OAAV,EAAmB;AACjB,YAAMsG,UAAU,GAAG9F,IAAI,CAACP,KAAK,CAACD,OAAN,CAAcc,GAAf,CAAvB;AACA,YAAMyF,KAAK,GAAGD,UAAU,CAACnF,MAAX,CAAkBoF,KAAlB,CAAwB,6CAAxB,CAAd;;AACA,YAAIA,KAAJ,EAAW;AACT,cAAMC,WAAW,GAAGD,KAAK,CAAC,CAAD,CAAzB;AACA,cAAMvG,OAAO,GAAGxB,OAAO,CAACsE,QAAR,CAAiB0D,WAAjB,CAAhB;AACAxG,UAAAA,OAAO,CAAC6C,OAAR,CAAgBjC,OAAhB,CAAwB,UAAA6F,MAAM,EAAI;AAChC,gBAAIA,MAAM,CAACrE,MAAX,EAAmB;AACjB,kBAAMO,KAAK,GAAG;AACZN,gBAAAA,IAAI,EAAE,OADM;AAEZC,gBAAAA,OAAO,EAAEmE,MAAM,CAACrE,MAAP,CAAcsE,KAFX;AAGZ1D,gBAAAA,KAAK,EAAEyD,MAAM,CAACzD;AAHF,eAAd;AAKA/C,cAAAA,KAAK,CAACkC,KAAN,CAAYpB,IAAZ,CAAiB4B,KAAjB;AACD;AACF,WATD;AAUD;AACF;;AAED,UAAMgE,aAAa,GAAG1G,KAAK,CAACyC,UAAN,IAAoBlC,IAAI,CAACP,KAAK,CAACyC,UAAN,CAAiB5B,GAAlB,CAA9C;;AACA,UAAI6F,aAAJ,EAAmB;AACjB,YAAMvF,MAAM,GAAGuF,aAAa,CAACxF,MAAd,CAAqByF,KAArB,CAA2B,SAA3B,EAAsC,CAAtC,CAAf;AACA,YAAMtE,OAAO,GAAG9D,OAAO,CAACqI,UAAR,IAAsBrI,OAAO,CAACqI,UAAR,CAAmBzF,MAAnB,CAAtC;;AACA,YAAIkB,OAAO,KAAKsB,SAAhB,EAA2B;AACzB3D,UAAAA,KAAK,CAACkC,KAAN,CAAYpB,IAAZ,CAAiB;AACfsB,YAAAA,IAAI,EAAE,YADS;AAEfC,YAAAA,OAAO,EAAPA;AAFe,WAAjB;AAID;AACF;;AAED,aAAOrC,KAAK,CAAC0F,aAAb;AACA,aAAO1F,KAAK,CAACP,UAAb;AACA,aAAOO,KAAK,CAACE,QAAb;AACD;;;;EAnV0B9C,S;;AAsV7BkB,cAAc,CAAC8E,oBAAf,GAAsC;AACpCyD,EAAAA,KAAK,EAAE,2DAD6B;AAElC,aAAW,qEAFuB;AAGlC,cAAY,6DAHsB;AAIlC,kBAAgB,OAJkB;AAKlC,iBAAe;AALmB,CAAtC;AAQAC,MAAM,CAACC,OAAP,GAAiBzI,cAAjB","sourcesContent":["const _ = require('../../../utils/under-dash');\n\nconst colCache = require('../../../utils/col-cache');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst RelType = require('../../rel-type');\n\nconst Merges = require('./merges');\n\nconst BaseXform = require('../base-xform');\nconst ListXform = require('../list-xform');\nconst RowXform = require('./row-xform');\nconst ColXform = require('./col-xform');\nconst DimensionXform = require('./dimension-xform');\nconst HyperlinkXform = require('./hyperlink-xform');\nconst MergeCellXform = require('./merge-cell-xform');\nconst DataValidationsXform = require('./data-validations-xform');\nconst SheetPropertiesXform = require('./sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('./sheet-format-properties-xform');\nconst SheetViewXform = require('./sheet-view-xform');\nconst PageMarginsXform = require('./page-margins-xform');\nconst PageSetupXform = require('./page-setup-xform');\nconst PrintOptionsXform = require('./print-options-xform');\nconst AutoFilterXform = require('./auto-filter-xform');\nconst PictureXform = require('./picture-xform');\nconst DrawingXform = require('./drawing-xform');\nconst RowBreaksXform = require('./row-breaks-xform');\n\nclass WorkSheetXform extends BaseXform {\n  constructor(options) {\n    super();\n\n    const {maxRows, maxCols} = options || {};\n    this.map = {\n      sheetPr: new SheetPropertiesXform(),\n      dimension: new DimensionXform(),\n      sheetViews: new ListXform({tag: 'sheetViews', count: false, childXform: new SheetViewXform()}),\n      sheetFormatPr: new SheetFormatPropertiesXform(),\n      cols: new ListXform({tag: 'cols', count: false, childXform: new ColXform()}),\n      sheetData: new ListXform({\n        tag: 'sheetData',\n        count: false,\n        empty: true,\n        childXform: new RowXform({maxItems: maxCols}),\n        maxItems: maxRows,\n      }),\n      autoFilter: new AutoFilterXform(),\n      mergeCells: new ListXform({tag: 'mergeCells', count: true, childXform: new MergeCellXform()}),\n      rowBreaks: new RowBreaksXform(),\n      hyperlinks: new ListXform({tag: 'hyperlinks', count: false, childXform: new HyperlinkXform()}),\n      pageMargins: new PageMarginsXform(),\n      dataValidations: new DataValidationsXform(),\n      pageSetup: new PageSetupXform(),\n      printOptions: new PrintOptionsXform(),\n      picture: new PictureXform(),\n      drawing: new DrawingXform(),\n    };\n  }\n\n  prepare(model, options) {\n    options.merges = new Merges();\n    model.hyperlinks = options.hyperlinks = [];\n    model.comments = options.comments = [];\n\n    options.formulae = {};\n    options.siFormulae = 0;\n    this.map.cols.prepare(model.cols, options);\n    this.map.sheetData.prepare(model.rows, options);\n\n    model.mergeCells = options.merges.mergeCells;\n\n    // prepare relationships\n    const rels = (model.rels = []);\n\n    function nextRid(r) {\n      return `rId${r.length + 1}`;\n    }\n\n    model.hyperlinks.forEach(hyperlink => {\n      const rId = nextRid(rels);\n      hyperlink.rId = rId;\n      rels.push({\n        Id: rId,\n        Type: RelType.Hyperlink,\n        Target: hyperlink.target,\n        TargetMode: 'External',\n      });\n    });\n\n    // prepare comment relationships\n    if (model.comments.length > 0) {\n      const comment = {\n        Id: nextRid(rels),\n        Type: RelType.Comments,\n        Target: `../comments${model.id}.xml`,\n      };\n      rels.push(comment);\n      const vmlDrawing = {\n        Id: nextRid(rels),\n        Type: RelType.VmlDrawing,\n        Target: `../drawings/vmlDrawing${model.id}.vml`,\n      };\n      rels.push(vmlDrawing);\n\n      model.comments.forEach(item => {\n        item.refAddress = colCache.decodeAddress(item.ref);\n      });\n\n      options.commentRefs.push({\n        commentName: `comments${model.id}`,\n        vmlDrawing: `vmlDrawing${model.id}`,\n      });\n    }\n\n    const drawingRelsHash = [];\n    let bookImage;\n    model.media.forEach(medium => {\n      if (medium.type === 'background') {\n        const rId = nextRid(rels);\n        bookImage = options.media[medium.imageId];\n        rels.push({\n          Id: rId,\n          Type: RelType.Image,\n          Target: `../media/${bookImage.name}.${bookImage.extension}`,\n        });\n        model.background = {\n          rId,\n        };\n        model.image = options.media[medium.imageId];\n      } else if (medium.type === 'image') {\n        let {drawing} = model;\n        bookImage = options.media[medium.imageId];\n        if (!drawing) {\n          drawing = model.drawing = {\n            rId: nextRid(rels),\n            name: `drawing${++options.drawingsCount}`,\n            anchors: [],\n            rels: [],\n          };\n          options.drawings.push(drawing);\n          rels.push({\n            Id: drawing.rId,\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\n            Target: `../drawings/${drawing.name}.xml`,\n          });\n        }\n        let rIdImage = drawingRelsHash[medium.imageId];\n        if (!rIdImage) {\n          rIdImage = nextRid(drawing.rels);\n          drawingRelsHash[medium.imageId] = rIdImage;\n          drawing.rels.push({\n            Id: rIdImage,\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n            Target: `../media/${bookImage.name}.${bookImage.extension}`,\n          });\n        }\n        drawing.anchors.push({\n          picture: {\n            rId: rIdImage,\n          },\n          range: medium.range,\n        });\n      }\n    });\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('worksheet', WorkSheetXform.WORKSHEET_ATTRIBUTES);\n\n    const sheetFormatPropertiesModel = model.properties\n      ? {\n        defaultRowHeight: model.properties.defaultRowHeight,\n        dyDescent: model.properties.dyDescent,\n        outlineLevelCol: model.properties.outlineLevelCol,\n        outlineLevelRow: model.properties.outlineLevelRow,\n      }\n      : undefined;\n    const sheetPropertiesModel = {\n      outlineProperties: model.properties && model.properties.outlineProperties,\n      tabColor: model.properties && model.properties.tabColor,\n      pageSetup:\n        model.pageSetup && model.pageSetup.fitToPage\n          ? {\n            fitToPage: model.pageSetup.fitToPage,\n          }\n          : undefined,\n    };\n    const pageMarginsModel = model.pageSetup && model.pageSetup.margins;\n    const printOptionsModel = {\n      showRowColHeaders: model.showRowColHeaders,\n      showGridLines: model.showGridLines,\n      horizontalCentered: model.horizontalCentered,\n      verticalCentered: model.verticalCentered,\n    };\n\n    this.map.sheetPr.render(xmlStream, sheetPropertiesModel);\n    this.map.dimension.render(xmlStream, model.dimensions);\n    this.map.sheetViews.render(xmlStream, model.views);\n    this.map.sheetFormatPr.render(xmlStream, sheetFormatPropertiesModel);\n    this.map.cols.render(xmlStream, model.cols);\n    this.map.sheetData.render(xmlStream, model.rows);\n    this.map.autoFilter.render(xmlStream, model.autoFilter);\n    this.map.mergeCells.render(xmlStream, model.mergeCells);\n    this.map.dataValidations.render(xmlStream, model.dataValidations);\n    // For some reason hyperlinks have to be after the data validations\n    this.map.hyperlinks.render(xmlStream, model.hyperlinks);\n    this.map.pageMargins.render(xmlStream, pageMarginsModel);\n    this.map.printOptions.render(xmlStream, printOptionsModel);\n    this.map.pageSetup.render(xmlStream, model.pageSetup);\n    this.map.rowBreaks.render(xmlStream, model.rowBreaks);\n    this.map.drawing.render(xmlStream, model.drawing); // Note: must be after rowBreaks\n    this.map.picture.render(xmlStream, model.background); // Note: must be after drawing\n\n    if (model.rels) {\n      // add a <legacyDrawing /> node for each comment\n      model.rels.forEach(rel => {\n        if (rel.Type === RelType.VmlDrawing) {\n          xmlStream.leafNode('legacyDrawing', {'r:id': rel.Id});\n        }\n      });\n    }\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    if (node.name === 'worksheet') {\n      _.each(this.map, xform => {\n        xform.reset();\n      });\n      return true;\n    }\n\n    this.parser = this.map[node.name];\n    if (this.parser) {\n      this.parser.parseOpen(node);\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'worksheet': {\n        const properties = this.map.sheetFormatPr.model;\n        if (this.map.sheetPr.model && this.map.sheetPr.model.tabColor) {\n          properties.tabColor = this.map.sheetPr.model.tabColor;\n        }\n        if (this.map.sheetPr.model && this.map.sheetPr.model.outlineProperties) {\n          properties.outlineProperties = this.map.sheetPr.model.outlinePropertiesx;\n        }\n        const sheetProperties = {\n          fitToPage: (this.map.sheetPr.model && this.map.sheetPr.model.pageSetup && this.map.sheetPr.model.pageSetup.fitToPage) || false,\n          margins: this.map.pageMargins.model,\n        };\n        const pageSetup = Object.assign(sheetProperties, this.map.pageSetup.model, this.map.printOptions.model);\n        this.model = {\n          dimensions: this.map.dimension.model,\n          cols: this.map.cols.model,\n          rows: this.map.sheetData.model,\n          mergeCells: this.map.mergeCells.model,\n          hyperlinks: this.map.hyperlinks.model,\n          dataValidations: this.map.dataValidations.model,\n          properties,\n          views: this.map.sheetViews.model,\n          pageSetup,\n          background: this.map.picture.model,\n          drawing: this.map.drawing.model,\n        };\n\n        if (this.map.autoFilter.model) {\n          this.model.autoFilter = this.map.autoFilter.model;\n        }\n        return false;\n      }\n\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  reconcile(model, options) {\n    // options.merges = new Merges();\n    // options.merges.reconcile(model.mergeCells, model.rows);\n    const rels = (model.relationships || []).reduce((h, rel) => {\n      h[rel.Id] = rel;\n      if (rel.Type === RelType.Comments) {\n        model.comments = options.comments[rel.Target].comments;\n      }\n      return h;\n    }, {});\n    options.commentsMap = (model.comments || []).reduce((h, comment) => {\n      if (comment.ref) {\n        h[comment.ref] = comment;\n      }\n      return h;\n    }, {});\n    options.hyperlinkMap = (model.hyperlinks || []).reduce((h, hyperlink) => {\n      if (hyperlink.rId) {\n        h[hyperlink.address] = rels[hyperlink.rId].Target;\n      }\n      return h;\n    }, {});\n    options.formulae = {};\n\n    // compact the rows and cells\n    model.rows = (model.rows && model.rows.filter(Boolean)) || [];\n    model.rows.forEach(row => {\n      row.cells = (row.cells && row.cells.filter(Boolean)) || [];\n    });\n\n    this.map.cols.reconcile(model.cols, options);\n    this.map.sheetData.reconcile(model.rows, options);\n\n    model.media = [];\n    if (model.drawing) {\n      const drawingRel = rels[model.drawing.rId];\n      const match = drawingRel.Target.match(/\\/drawings\\/([a-zA-Z0-9]+)[.][a-zA-Z]{3,4}$/);\n      if (match) {\n        const drawingName = match[1];\n        const drawing = options.drawings[drawingName];\n        drawing.anchors.forEach(anchor => {\n          if (anchor.medium) {\n            const image = {\n              type: 'image',\n              imageId: anchor.medium.index,\n              range: anchor.range,\n            };\n            model.media.push(image);\n          }\n        });\n      }\n    }\n\n    const backgroundRel = model.background && rels[model.background.rId];\n    if (backgroundRel) {\n      const target = backgroundRel.Target.split('/media/')[1];\n      const imageId = options.mediaIndex && options.mediaIndex[target];\n      if (imageId !== undefined) {\n        model.media.push({\n          type: 'background',\n          imageId,\n        });\n      }\n    }\n\n    delete model.relationships;\n    delete model.hyperlinks;\n    delete model.comments;\n  }\n}\n\nWorkSheetXform.WORKSHEET_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n    'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n    'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n    'mc:Ignorable': 'x14ac',\n    'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n};\n\nmodule.exports = WorkSheetXform;\n"],"file":"worksheet-xform.js"}