{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/auto-filter-xform.js"],"names":["utils","require","colCache","BaseXform","AutoFilterXform","module","exports","inherits","tag","render","xmlStream","model","leafNode","ref","getAddress","addr","row","column","address","firstAddress","from","secondAddress","to","parseOpen","node","name","attributes"],"mappings":"AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMG,eAAe,GAAIC,MAAM,CAACC,OAAP,GAAiB,YAAW,CAAE,CAAvD;;AAEAN,KAAK,CAACO,QAAN,CAAeH,eAAf,EAAgCD,SAAhC,EAA2C;AACzC,MAAIK,GAAJ,GAAU;AACR,WAAO,YAAP;AACD,GAHwC;;AAKzCC,EAAAA,MALyC,kBAKlCC,SALkC,EAKvBC,KALuB,EAKhB;AACvB,QAAIA,KAAJ,EAAW;AACT,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B;AACAD,QAAAA,SAAS,CAACE,QAAV,CAAmB,YAAnB,EAAiC;AAAEC,UAAAA,GAAG,EAAEF;AAAP,SAAjC;AACD,OAHD,MAGO;AACL,YAAMG,UAAU,GAAG,SAAbA,UAAa,CAASC,IAAT,EAAe;AAChC,cAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,mBAAOA,IAAP;AACD;;AACD,iBAAOb,QAAQ,CAACY,UAAT,CAAoBC,IAAI,CAACC,GAAzB,EAA8BD,IAAI,CAACE,MAAnC,EAA2CC,OAAlD;AACD,SALD;;AAOA,YAAMC,YAAY,GAAGL,UAAU,CAACH,KAAK,CAACS,IAAP,CAA/B;AACA,YAAMC,aAAa,GAAGP,UAAU,CAACH,KAAK,CAACW,EAAP,CAAhC;;AACA,YAAIH,YAAY,IAAIE,aAApB,EAAmC;AACjCX,UAAAA,SAAS,CAACE,QAAV,CAAmB,YAAnB,EAAiC;AAAEC,YAAAA,GAAG,YAAKM,YAAL,cAAqBE,aAArB;AAAL,WAAjC;AACD;AACF;AACF;AACF,GAzBwC;AA2BzCE,EAAAA,SA3ByC,qBA2B/BC,IA3B+B,EA2BzB;AACd,QAAIA,IAAI,CAACC,IAAL,KAAc,YAAlB,EAAgC;AAC9B,WAAKd,KAAL,GAAaa,IAAI,CAACE,UAAL,CAAgBb,GAA7B;AACD;AACF;AA/BwC,CAA3C","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst colCache = require('../../../utils/col-cache');\nconst BaseXform = require('../base-xform');\n\nconst AutoFilterXform = (module.exports = function() {});\n\nutils.inherits(AutoFilterXform, BaseXform, {\n  get tag() {\n    return 'autoFilter';\n  },\n\n  render(xmlStream, model) {\n    if (model) {\n      if (typeof model === 'string') {\n        // assume range\n        xmlStream.leafNode('autoFilter', { ref: model });\n      } else {\n        const getAddress = function(addr) {\n          if (typeof addr === 'string') {\n            return addr;\n          }\n          return colCache.getAddress(addr.row, addr.column).address;\n        };\n\n        const firstAddress = getAddress(model.from);\n        const secondAddress = getAddress(model.to);\n        if (firstAddress && secondAddress) {\n          xmlStream.leafNode('autoFilter', { ref: `${firstAddress}:${secondAddress}` });\n        }\n      }\n    }\n  },\n\n  parseOpen(node) {\n    if (node.name === 'autoFilter') {\n      this.model = node.attributes.ref;\n    }\n  },\n});\n"],"file":"auto-filter-xform.js"}