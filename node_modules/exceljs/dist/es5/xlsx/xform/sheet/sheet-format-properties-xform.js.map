{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/sheet-format-properties-xform.js"],"names":["_","require","BaseXform","SheetFormatPropertiesXform","xmlStream","model","attributes","defaultRowHeight","outlineLevelRow","outlineLevelCol","dyDescent","some","value","undefined","leafNode","node","name","parseFloat","parseInt","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAC,2BAAD,CAAjB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;IAEME,0B;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvB,UAAIA,KAAJ,EAAW;AACT,YAAMC,UAAU,GAAG;AACjBC,UAAAA,gBAAgB,EAAEF,KAAK,CAACE,gBADP;AAEjBC,UAAAA,eAAe,EAAEH,KAAK,CAACG,eAFN;AAGjBC,UAAAA,eAAe,EAAEJ,KAAK,CAACI,eAHN;AAIjB,6BAAmBJ,KAAK,CAACK;AAJR,SAAnB;;AAMA,YAAIV,CAAC,CAACW,IAAF,CAAOL,UAAP,EAAmB,UAAAM,KAAK;AAAA,iBAAIA,KAAK,KAAKC,SAAd;AAAA,SAAxB,CAAJ,EAAsD;AACpDT,UAAAA,SAAS,CAACU,QAAV,CAAmB,eAAnB,EAAoCR,UAApC;AACD;AACF;AACF;;;8BAESS,I,EAAM;AACd,UAAIA,IAAI,CAACC,IAAL,KAAc,eAAlB,EAAmC;AACjC,aAAKX,KAAL,GAAa;AACXE,UAAAA,gBAAgB,EAAEU,UAAU,CAACF,IAAI,CAACT,UAAL,CAAgBC,gBAAhB,IAAoC,GAArC,CADjB;AAEXG,UAAAA,SAAS,EAAEO,UAAU,CAACF,IAAI,CAACT,UAAL,CAAgB,iBAAhB,KAAsC,GAAvC,CAFV;AAGXE,UAAAA,eAAe,EAAEU,QAAQ,CAACH,IAAI,CAACT,UAAL,CAAgBE,eAAhB,IAAmC,GAApC,EAAyC,EAAzC,CAHd;AAIXC,UAAAA,eAAe,EAAES,QAAQ,CAACH,IAAI,CAACT,UAAL,CAAgBG,eAAhB,IAAmC,GAApC,EAAyC,EAAzC;AAJd,SAAb;AAMA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBAnCS;AACR,aAAO,eAAP;AACD;;;;EAHsCP,S;;AAuCzCiB,MAAM,CAACC,OAAP,GAAiBjB,0BAAjB","sourcesContent":["const _ = require('../../../utils/under-dash');\nconst BaseXform = require('../base-xform');\n\nclass SheetFormatPropertiesXform extends BaseXform {\n  get tag() {\n    return 'sheetFormatPr';\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      const attributes = {\n        defaultRowHeight: model.defaultRowHeight,\n        outlineLevelRow: model.outlineLevelRow,\n        outlineLevelCol: model.outlineLevelCol,\n        'x14ac:dyDescent': model.dyDescent,\n      };\n      if (_.some(attributes, value => value !== undefined)) {\n        xmlStream.leafNode('sheetFormatPr', attributes);\n      }\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === 'sheetFormatPr') {\n      this.model = {\n        defaultRowHeight: parseFloat(node.attributes.defaultRowHeight || '0'),\n        dyDescent: parseFloat(node.attributes['x14ac:dyDescent'] || '0'),\n        outlineLevelRow: parseInt(node.attributes.outlineLevelRow || '0', 10),\n        outlineLevelCol: parseInt(node.attributes.outlineLevelCol || '0', 10),\n      };\n      return true;\n    }\n    return false;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nmodule.exports = SheetFormatPropertiesXform;\n"],"file":"sheet-format-properties-xform.js"}