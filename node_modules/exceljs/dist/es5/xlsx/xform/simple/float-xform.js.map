{"version":3,"sources":["../../../../../lib/xlsx/xform/simple/float-xform.js"],"names":["utils","require","BaseXform","FloatXform","module","exports","options","tag","attr","attrs","inherits","render","xmlStream","model","undefined","openNode","addAttributes","addAttribute","writeText","closeNode","parseOpen","node","name","parseFloat","attributes","text","parseText","push","parseClose","join"],"mappings":"AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAME,UAAU,GAAIC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AACrD,OAAKC,GAAL,GAAWD,OAAO,CAACC,GAAnB;AACA,OAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,OAAKC,KAAL,GAAaH,OAAO,CAACG,KAArB;AACD,CAJD;;AAMAT,KAAK,CAACU,QAAN,CAAeP,UAAf,EAA2BD,SAA3B,EAAsC;AACpCS,EAAAA,MADoC,kBAC7BC,SAD6B,EAClBC,KADkB,EACX;AACvB,QAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvBF,MAAAA,SAAS,CAACG,QAAV,CAAmB,KAAKR,GAAxB;;AACA,UAAI,KAAKE,KAAT,EAAgB;AACdG,QAAAA,SAAS,CAACI,aAAV,CAAwB,KAAKP,KAA7B;AACD;;AACD,UAAI,KAAKD,IAAT,EAAe;AACbI,QAAAA,SAAS,CAACK,YAAV,CAAuB,KAAKT,IAA5B,EAAkCK,KAAlC;AACD,OAFD,MAEO;AACLD,QAAAA,SAAS,CAACM,SAAV,CAAoBL,KAApB;AACD;;AACDD,MAAAA,SAAS,CAACO,SAAV;AACD;AACF,GAdmC;AAgBpCC,EAAAA,SAhBoC,qBAgB1BC,IAhB0B,EAgBpB;AACd,QAAIA,IAAI,CAACC,IAAL,KAAc,KAAKf,GAAvB,EAA4B;AAC1B,UAAI,KAAKC,IAAT,EAAe;AACb,aAAKK,KAAL,GAAaU,UAAU,CAACF,IAAI,CAACG,UAAL,CAAgB,KAAKhB,IAArB,CAAD,CAAvB;AACD,OAFD,MAEO;AACL,aAAKiB,IAAL,GAAY,EAAZ;AACD;AACF;AACF,GAxBmC;AAyBpCC,EAAAA,SAzBoC,qBAyB1BD,IAzB0B,EAyBpB;AACd,QAAI,CAAC,KAAKjB,IAAV,EAAgB;AACd,WAAKiB,IAAL,CAAUE,IAAV,CAAeF,IAAf;AACD;AACF,GA7BmC;AA8BpCG,EAAAA,UA9BoC,wBA8BvB;AACX,QAAI,CAAC,KAAKpB,IAAV,EAAgB;AACd,WAAKK,KAAL,GAAaU,UAAU,CAAC,KAAKE,IAAL,CAAUI,IAAV,CAAe,EAAf,CAAD,CAAvB;AACD;;AACD,WAAO,KAAP;AACD;AAnCmC,CAAtC","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nconst FloatXform = (module.exports = function(options) {\n  this.tag = options.tag;\n  this.attr = options.attr;\n  this.attrs = options.attrs;\n});\n\nutils.inherits(FloatXform, BaseXform, {\n  render(xmlStream, model) {\n    if (model !== undefined) {\n      xmlStream.openNode(this.tag);\n      if (this.attrs) {\n        xmlStream.addAttributes(this.attrs);\n      }\n      if (this.attr) {\n        xmlStream.addAttribute(this.attr, model);\n      } else {\n        xmlStream.writeText(model);\n      }\n      xmlStream.closeNode();\n    }\n  },\n\n  parseOpen(node) {\n    if (node.name === this.tag) {\n      if (this.attr) {\n        this.model = parseFloat(node.attributes[this.attr]);\n      } else {\n        this.text = [];\n      }\n    }\n  },\n  parseText(text) {\n    if (!this.attr) {\n      this.text.push(text);\n    }\n  },\n  parseClose() {\n    if (!this.attr) {\n      this.model = parseFloat(this.text.join(''));\n    }\n    return false;\n  },\n});\n"],"file":"float-xform.js"}