{"version":3,"sources":["../../../../../lib/xlsx/xform/simple/date-xform.js"],"names":["utils","require","BaseXform","DateXform","module","exports","options","tag","attr","attrs","_format","format","dt","Number","isNaN","getTime","toISOString","e","_parse","parse","str","Date","inherits","render","xmlStream","model","openNode","addAttributes","addAttribute","writeText","closeNode","parseOpen","node","name","attributes","text","parseText","push","parseClose","join"],"mappings":"AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAME,SAAS,GAAIC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AACpD,OAAKC,GAAL,GAAWD,OAAO,CAACC,GAAnB;AACA,OAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,OAAKC,KAAL,GAAaH,OAAO,CAACG,KAArB;;AACA,OAAKC,OAAL,GACEJ,OAAO,CAACK,MAAR,IACA,UAASC,EAAT,EAAa;AACX,QAAI;AACF,UAAIC,MAAM,CAACC,KAAP,CAAaF,EAAE,CAACG,OAAH,EAAb,CAAJ,EAAgC,OAAO,EAAP;AAChC,aAAOH,EAAE,CAACI,WAAH,EAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,EAAP;AACD;AACF,GATH;;AAUA,OAAKC,MAAL,GACEZ,OAAO,CAACa,KAAR,IACA,UAASC,GAAT,EAAc;AACZ,WAAO,IAAIC,IAAJ,CAASD,GAAT,CAAP;AACD,GAJH;AAKD,CAnBD;;AAqBApB,KAAK,CAACsB,QAAN,CAAenB,SAAf,EAA0BD,SAA1B,EAAqC;AACnCqB,EAAAA,MADmC,kBAC5BC,SAD4B,EACjBC,KADiB,EACV;AACvB,QAAIA,KAAJ,EAAW;AACTD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKnB,GAAxB;;AACA,UAAI,KAAKE,KAAT,EAAgB;AACde,QAAAA,SAAS,CAACG,aAAV,CAAwB,KAAKlB,KAA7B;AACD;;AACD,UAAI,KAAKD,IAAT,EAAe;AACbgB,QAAAA,SAAS,CAACI,YAAV,CAAuB,KAAKpB,IAA5B,EAAkC,KAAKE,OAAL,CAAae,KAAb,CAAlC;AACD,OAFD,MAEO;AACLD,QAAAA,SAAS,CAACK,SAAV,CAAoB,KAAKnB,OAAL,CAAae,KAAb,CAApB;AACD;;AACDD,MAAAA,SAAS,CAACM,SAAV;AACD;AACF,GAdkC;AAgBnCC,EAAAA,SAhBmC,qBAgBzBC,IAhByB,EAgBnB;AACd,QAAIA,IAAI,CAACC,IAAL,KAAc,KAAK1B,GAAvB,EAA4B;AAC1B,UAAI,KAAKC,IAAT,EAAe;AACb,aAAKiB,KAAL,GAAa,KAAKP,MAAL,CAAYc,IAAI,CAACE,UAAL,CAAgB,KAAK1B,IAArB,CAAZ,CAAb;AACD,OAFD,MAEO;AACL,aAAK2B,IAAL,GAAY,EAAZ;AACD;AACF;AACF,GAxBkC;AAyBnCC,EAAAA,SAzBmC,qBAyBzBD,IAzByB,EAyBnB;AACd,QAAI,CAAC,KAAK3B,IAAV,EAAgB;AACd,WAAK2B,IAAL,CAAUE,IAAV,CAAeF,IAAf;AACD;AACF,GA7BkC;AA8BnCG,EAAAA,UA9BmC,wBA8BtB;AACX,QAAI,CAAC,KAAK9B,IAAV,EAAgB;AACd,WAAKiB,KAAL,GAAa,KAAKP,MAAL,CAAY,KAAKiB,IAAL,CAAUI,IAAV,CAAe,EAAf,CAAZ,CAAb;AACD;;AACD,WAAO,KAAP;AACD;AAnCkC,CAArC","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseXform = require('../base-xform');\n\nconst DateXform = (module.exports = function(options) {\n  this.tag = options.tag;\n  this.attr = options.attr;\n  this.attrs = options.attrs;\n  this._format =\n    options.format ||\n    function(dt) {\n      try {\n        if (Number.isNaN(dt.getTime())) return '';\n        return dt.toISOString();\n      } catch (e) {\n        return '';\n      }\n    };\n  this._parse =\n    options.parse ||\n    function(str) {\n      return new Date(str);\n    };\n});\n\nutils.inherits(DateXform, BaseXform, {\n  render(xmlStream, model) {\n    if (model) {\n      xmlStream.openNode(this.tag);\n      if (this.attrs) {\n        xmlStream.addAttributes(this.attrs);\n      }\n      if (this.attr) {\n        xmlStream.addAttribute(this.attr, this._format(model));\n      } else {\n        xmlStream.writeText(this._format(model));\n      }\n      xmlStream.closeNode();\n    }\n  },\n\n  parseOpen(node) {\n    if (node.name === this.tag) {\n      if (this.attr) {\n        this.model = this._parse(node.attributes[this.attr]);\n      } else {\n        this.text = [];\n      }\n    }\n  },\n  parseText(text) {\n    if (!this.attr) {\n      this.text.push(text);\n    }\n  },\n  parseClose() {\n    if (!this.attr) {\n      this.model = this._parse(this.text.join(''));\n    }\n    return false;\n  },\n});\n"],"file":"date-xform.js"}