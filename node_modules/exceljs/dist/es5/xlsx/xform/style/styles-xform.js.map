{"version":3,"sources":["../../../../../lib/xlsx/xform/style/styles-xform.js"],"names":["PromiseLib","require","utils","Enums","XmlStream","BaseXform","StaticXform","ListXform","FontXform","FillXform","BorderXform","NumFmtXform","StyleXform","NUMFMT_BASE","StylesXform","initialise","map","numFmts","tag","count","childXform","fonts","$","fills","borders","cellStyleXfs","cellXfs","xfId","numFmt","font","fill","border","style","cellStyles","STATIC_XFORMS","dxfs","tableStyles","extLst","init","inherits","STYLESHEET_ATTRIBUTES","xmlns","c","name","builtinId","defaultTableStyle","defaultPivotStyle","uri","defaultSlicerStyle","defaultTimelineStyle","initIndex","index","numFmtNextId","model","styles","_addFont","size","color","theme","family","scheme","_addBorder","_addStyle","numFmtId","fontId","fillId","borderId","_addFill","type","pattern","render","xmlStream","openXml","StdDocAttributes","openNode","length","forEach","numFmtXml","writeXml","closeNode","fontXml","fillXml","borderXml","styleXml","parseOpen","node","parser","parseText","text","parseClose","undefined","add","propName","xform","numFmtIndex","id","formatCode","addStyleModel","cellType","weakMap","has","get","ValueType","Number","_addNumFmtStr","Date","alignment","styleId","set","getStyleModel","getDefaultFmtCode","addStyle","group","part","xml","toXml","push","getDefaultFmtId","Mock","call","parseStream","stream","autodrain","Promise","resolve","dateStyleId","_dateStyleId","dateStyle","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst PromiseLib = require('../../../utils/promise');\n\nconst utils = require('../../../utils/utils');\nconst Enums = require('../../../doc/enums');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst FontXform = require('./font-xform');\nconst FillXform = require('./fill-xform');\nconst BorderXform = require('./border-xform');\nconst NumFmtXform = require('./numfmt-xform');\nconst StyleXform = require('./style-xform');\n\n// custom numfmt ids start here\nconst NUMFMT_BASE = 164;\n\n// =============================================================================\n// StylesXform is used to generate and parse the styles.xml file\n// it manages the collections of fonts, number formats, alignments, etc\nconst StylesXform = function(initialise) {\n  this.map = {\n    numFmts: new ListXform({ tag: 'numFmts', count: true, childXform: new NumFmtXform() }),\n    fonts: new ListXform({ tag: 'fonts', count: true, childXform: new FontXform(), $: { 'x14ac:knownFonts': 1 } }),\n    fills: new ListXform({ tag: 'fills', count: true, childXform: new FillXform() }),\n    borders: new ListXform({ tag: 'borders', count: true, childXform: new BorderXform() }),\n    cellStyleXfs: new ListXform({ tag: 'cellStyleXfs', count: true, childXform: new StyleXform() }),\n    cellXfs: new ListXform({ tag: 'cellXfs', count: true, childXform: new StyleXform({ xfId: true }) }),\n\n    // for style manager\n    numFmt: new NumFmtXform(),\n    font: new FontXform(),\n    fill: new FillXform(),\n    border: new BorderXform(),\n    style: new StyleXform({ xfId: true }),\n\n    cellStyles: StylesXform.STATIC_XFORMS.cellStyles,\n    dxfs: StylesXform.STATIC_XFORMS.dxfs,\n    tableStyles: StylesXform.STATIC_XFORMS.tableStyles,\n    extLst: StylesXform.STATIC_XFORMS.extLst,\n  };\n\n  if (initialise) {\n    // StylesXform also acts as style manager and is used to build up styles-model during worksheet processing\n    this.init();\n  }\n};\n\nutils.inherits(\n  StylesXform,\n  BaseXform,\n  {\n    STYLESHEET_ATTRIBUTES: {\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n      'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n      'mc:Ignorable': 'x14ac x16r2',\n      'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n      'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n    },\n    STATIC_XFORMS: {\n      cellStyles: new StaticXform({ tag: 'cellStyles', $: { count: 1 }, c: [{ tag: 'cellStyle', $: { name: 'Normal', xfId: 0, builtinId: 0 } }] }),\n      dxfs: new StaticXform({ tag: 'dxfs', $: { count: 0 } }),\n      tableStyles: new StaticXform({ tag: 'tableStyles', $: { count: 0, defaultTableStyle: 'TableStyleMedium2', defaultPivotStyle: 'PivotStyleLight16' } }),\n      extLst: new StaticXform({\n        tag: 'extLst',\n        c: [\n          {\n            tag: 'ext',\n            $: { uri: '{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}', 'xmlns:x14': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/main' },\n            c: [{ tag: 'x14:slicerStyles', $: { defaultSlicerStyle: 'SlicerStyleLight1' } }],\n          },\n          {\n            tag: 'ext',\n            $: { uri: '{9260A510-F301-46a8-8635-F512D64BE5F5}', 'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main' },\n            c: [{ tag: 'x15:timelineStyles', $: { defaultTimelineStyle: 'TimeSlicerStyleLight1' } }],\n          },\n        ],\n      }),\n    },\n  },\n  {\n    initIndex() {\n      this.index = {\n        style: {},\n        numFmt: {},\n        numFmtNextId: 164, // start custom format ids here\n        font: {},\n        border: {},\n        fill: {},\n      };\n    },\n\n    init() {\n      // Prepare for Style Manager role\n      this.model = {\n        styles: [],\n        numFmts: [],\n        fonts: [],\n        borders: [],\n        fills: [],\n      };\n\n      this.initIndex();\n\n      // default (zero) font\n      this._addFont({ size: 11, color: { theme: 1 }, name: 'Calibri', family: 2, scheme: 'minor' });\n\n      // default (zero) border\n      this._addBorder({});\n\n      // add default (all zero) style\n      this._addStyle({ numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0 });\n\n      // add default fills\n      this._addFill({ type: 'pattern', pattern: 'none' });\n      this._addFill({ type: 'pattern', pattern: 'gray125' });\n    },\n\n    render(xmlStream, model) {\n      model = model || this.model;\n      //\n      //   <fonts count=\"2\" x14ac:knownFonts=\"1\">\n      xmlStream.openXml(XmlStream.StdDocAttributes);\n\n      xmlStream.openNode('styleSheet', StylesXform.STYLESHEET_ATTRIBUTES);\n\n      if (this.index) {\n        // model has been built by style manager role (contains xml)\n        if (model.numFmts && model.numFmts.length) {\n          xmlStream.openNode('numFmts', { count: model.numFmts.length });\n          model.numFmts.forEach(numFmtXml => {\n            xmlStream.writeXml(numFmtXml);\n          });\n          xmlStream.closeNode();\n        }\n\n        xmlStream.openNode('fonts', { count: model.fonts.length });\n        model.fonts.forEach(fontXml => {\n          xmlStream.writeXml(fontXml);\n        });\n        xmlStream.closeNode();\n\n        xmlStream.openNode('fills', { count: model.fills.length });\n        model.fills.forEach(fillXml => {\n          xmlStream.writeXml(fillXml);\n        });\n        xmlStream.closeNode();\n\n        xmlStream.openNode('borders', { count: model.borders.length });\n        model.borders.forEach(borderXml => {\n          xmlStream.writeXml(borderXml);\n        });\n        xmlStream.closeNode();\n\n        this.map.cellStyleXfs.render(xmlStream, [{ numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0 }]);\n\n        xmlStream.openNode('cellXfs', { count: model.styles.length });\n        model.styles.forEach(styleXml => {\n          xmlStream.writeXml(styleXml);\n        });\n        xmlStream.closeNode();\n      } else {\n        // model is plain JSON and needs to be xformed\n        this.map.numFmts.render(xmlStream, model.numFmts);\n        this.map.fonts.render(xmlStream, model.fonts);\n        this.map.fills.render(xmlStream, model.fills);\n        this.map.borders.render(xmlStream, model.borders);\n        this.map.cellStyleXfs.render(xmlStream, [{ numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0 }]);\n        this.map.cellXfs.render(xmlStream, model.styles);\n      }\n\n      // trailing static stuff\n      StylesXform.STATIC_XFORMS.cellStyles.render(xmlStream);\n      StylesXform.STATIC_XFORMS.dxfs.render(xmlStream);\n      StylesXform.STATIC_XFORMS.tableStyles.render(xmlStream);\n      StylesXform.STATIC_XFORMS.extLst.render(xmlStream);\n\n      xmlStream.closeNode();\n    },\n\n    parseOpen(node) {\n      if (this.parser) {\n        this.parser.parseOpen(node);\n        return true;\n      }\n      switch (node.name) {\n        case 'styleSheet':\n          this.initIndex();\n          return true;\n        default:\n          this.parser = this.map[node.name];\n          if (this.parser) {\n            this.parser.parseOpen(node);\n          }\n          return true;\n      }\n    },\n    parseText(text) {\n      if (this.parser) {\n        this.parser.parseText(text);\n      }\n    },\n    parseClose(name) {\n      if (this.parser) {\n        if (!this.parser.parseClose(name)) {\n          this.parser = undefined;\n        }\n        return true;\n      }\n      switch (name) {\n        case 'styleSheet': {\n          this.model = {};\n          const add = (propName, xform) => {\n            if (xform.model && xform.model.length) {\n              this.model[propName] = xform.model;\n            }\n          };\n          add('numFmts', this.map.numFmts);\n          add('fonts', this.map.fonts);\n          add('fills', this.map.fills);\n          add('borders', this.map.borders);\n          add('styles', this.map.cellXfs);\n\n          // index numFmts\n          this.index = {\n            model: [],\n            numFmt: [],\n          };\n          if (this.model.numFmts) {\n            const numFmtIndex = this.index.numFmt;\n            this.model.numFmts.forEach(numFmt => {\n              numFmtIndex[numFmt.id] = numFmt.formatCode;\n            });\n          }\n\n          return false;\n        }\n        default:\n          // not quite sure how we get here!\n          return true;\n      }\n    },\n\n    // add a cell's style model to the collection\n    // each style property is processed and cross-referenced, etc.\n    // the styleId is returned. Note: cellType is used when numFmt not defined\n    addStyleModel(model, cellType) {\n      if (!model) {\n        return 0;\n      }\n\n      // if we have seen this style object before, assume it has the same styleId\n      if (this.weakMap && this.weakMap.has(model)) {\n        return this.weakMap.get(model);\n      }\n\n      const style = {};\n      cellType = cellType || Enums.ValueType.Number;\n\n      if (model.numFmt) {\n        style.numFmtId = this._addNumFmtStr(model.numFmt);\n      } else {\n        switch (cellType) {\n          case Enums.ValueType.Number:\n            style.numFmtId = this._addNumFmtStr('General');\n            break;\n          case Enums.ValueType.Date:\n            style.numFmtId = this._addNumFmtStr('mm-dd-yy');\n            break;\n          default:\n            break;\n        }\n      }\n\n      if (model.font) {\n        style.fontId = this._addFont(model.font);\n      }\n\n      if (model.border) {\n        style.borderId = this._addBorder(model.border);\n      }\n\n      if (model.fill) {\n        style.fillId = this._addFill(model.fill);\n      }\n\n      if (model.alignment) {\n        style.alignment = model.alignment;\n      }\n\n      const styleId = this._addStyle(style);\n      if (this.weakMap) {\n        this.weakMap.set(model, styleId);\n      }\n      return styleId;\n    },\n\n    // given a styleId (i.e. s=\"n\"), get the cell's style model\n    // objects are shared where possible.\n    getStyleModel(id) {\n      // if the style doesn't exist return null\n      const style = this.model.styles[id];\n      if (!style) return null;\n\n      // have we built this model before?\n      let model = this.index.model[id];\n      if (model) return model;\n\n      // build a new model\n      model = this.index.model[id] = {};\n\n      // -------------------------------------------------------\n      // number format\n      if (style.numFmtId) {\n        const numFmt = this.index.numFmt[style.numFmtId] || NumFmtXform.getDefaultFmtCode(style.numFmtId);\n        if (numFmt) {\n          model.numFmt = numFmt;\n        }\n      }\n\n      function addStyle(name, group, styleId) {\n        if (styleId) {\n          const part = group[styleId];\n          if (part) {\n            model[name] = part;\n          }\n        }\n      }\n\n      addStyle('font', this.model.fonts, style.fontId);\n      addStyle('border', this.model.borders, style.borderId);\n      addStyle('fill', this.model.fills, style.fillId);\n\n      // -------------------------------------------------------\n      // alignment\n      if (style.alignment) {\n        model.alignment = style.alignment;\n      }\n\n      return model;\n    },\n\n    // =========================================================================\n    // Private Interface\n    _addStyle(style) {\n      const xml = this.map.style.toXml(style);\n      let index = this.index.style[xml];\n      if (index === undefined) {\n        index = this.index.style[xml] = this.model.styles.length;\n        this.model.styles.push(xml);\n      }\n      return index;\n    },\n\n    // =========================================================================\n    // Number Formats\n    _addNumFmtStr(formatCode) {\n      // check if default format\n      let index = NumFmtXform.getDefaultFmtId(formatCode);\n      if (index !== undefined) return index;\n\n      // check if already in\n      index = this.index.numFmt[formatCode];\n      if (index !== undefined) return index;\n\n      index = this.index.numFmt[formatCode] = NUMFMT_BASE + this.model.numFmts.length;\n      const xml = this.map.numFmt.toXml({ id: index, formatCode });\n      this.model.numFmts.push(xml);\n      return index;\n    },\n\n    // =========================================================================\n    // Fonts\n    _addFont(font) {\n      const xml = this.map.font.toXml(font);\n      let index = this.index.font[xml];\n      if (index === undefined) {\n        index = this.index.font[xml] = this.model.fonts.length;\n        this.model.fonts.push(xml);\n      }\n      return index;\n    },\n\n    // =========================================================================\n    // Borders\n    _addBorder(border) {\n      const xml = this.map.border.toXml(border);\n      let index = this.index.border[xml];\n      if (index === undefined) {\n        index = this.index.border[xml] = this.model.borders.length;\n        this.model.borders.push(xml);\n      }\n      return index;\n    },\n\n    // =========================================================================\n    // Fills\n    _addFill(fill) {\n      const xml = this.map.fill.toXml(fill);\n      let index = this.index.fill[xml];\n      if (index === undefined) {\n        index = this.index.fill[xml] = this.model.fills.length;\n        this.model.fills.push(xml);\n      }\n      return index;\n    },\n\n    // =========================================================================\n  }\n);\n\n// the stylemanager mock acts like StyleManager except that it always returns 0 or {}\nStylesXform.Mock = function() {\n  StylesXform.call(this);\n  this.model = {\n    styles: [{ numFmtId: 0, fontId: 0, fillId: 0, borderId: 0, xfId: 0 }],\n    numFmts: [],\n    fonts: [{ size: 11, color: { theme: 1 }, name: 'Calibri', family: 2, scheme: 'minor' }],\n    borders: [{}],\n    fills: [{ type: 'pattern', pattern: 'none' }, { type: 'pattern', pattern: 'gray125' }],\n  };\n};\n\nutils.inherits(StylesXform.Mock, StylesXform, {\n  // =========================================================================\n  // Style Manager Interface\n\n  // override normal behaviour - consume and dispose\n  parseStream(stream) {\n    stream.autodrain();\n    return PromiseLib.Promise.resolve();\n  },\n\n  // add a cell's style model to the collection\n  // each style property is processed and cross-referenced, etc.\n  // the styleId is returned. Note: cellType is used when numFmt not defined\n  addStyleModel(model, cellType) {\n    switch (cellType) {\n      case Enums.ValueType.Date:\n        return this.dateStyleId;\n      default:\n        return 0;\n    }\n  },\n\n  get dateStyleId() {\n    if (!this._dateStyleId) {\n      const dateStyle = {\n        numFmtId: NumFmtXform.getDefaultFmtId('mm-dd-yy'),\n      };\n      this._dateStyleId = this.model.styles.length;\n      this.model.styles.push(dateStyle);\n    }\n    return this._dateStyleId;\n  },\n\n  // given a styleId (i.e. s=\"n\"), get the cell's style model\n  // objects are shared where possible.\n  getStyleModel(/* id */) {\n    return {};\n  },\n});\n\nmodule.exports = StylesXform;\n"],"file":"styles-xform.js"}