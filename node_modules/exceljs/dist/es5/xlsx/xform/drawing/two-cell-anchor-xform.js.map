{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/two-cell-anchor-xform.js"],"names":["utils","require","BaseCellAnchorXform","StaticXform","CellPositionXform","PicXform","TwoCellAnchorXform","map","tag","inherits","prepare","model","options","picture","render","xmlStream","openNode","editAs","range","tl","br","closeNode","parseClose","name","parser","undefined","reconcile","medium","reconcilePicture","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst utils = require('../../../utils/utils');\nconst BaseCellAnchorXform = require('./base-cell-anchor-xform');\nconst StaticXform = require('../static-xform');\n\nconst CellPositionXform = require('./cell-position-xform');\nconst PicXform = require('./pic-xform');\n\nconst TwoCellAnchorXform = function() {\n  this.map = {\n    'xdr:from': new CellPositionXform({ tag: 'xdr:from' }),\n    'xdr:to': new CellPositionXform({ tag: 'xdr:to' }),\n    'xdr:pic': new PicXform(),\n    'xdr:clientData': new StaticXform({ tag: 'xdr:clientData' }),\n  };\n};\n\nutils.inherits(TwoCellAnchorXform, BaseCellAnchorXform, {\n  get tag() {\n    return 'xdr:twoCellAnchor';\n  },\n\n  prepare(model, options) {\n    this.map['xdr:pic'].prepare(model.picture, options);\n  },\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, { editAs: model.range.editAs || 'oneCell' });\n\n    this.map['xdr:from'].render(xmlStream, model.range.tl);\n    this.map['xdr:to'].render(xmlStream, model.range.br);\n    this.map['xdr:pic'].render(xmlStream, model.picture);\n    this.map['xdr:clientData'].render(xmlStream, {});\n\n    xmlStream.closeNode();\n  },\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model.range.tl = this.map['xdr:from'].model;\n        this.model.range.br = this.map['xdr:to'].model;\n        this.model.picture = this.map['xdr:pic'].model;\n        return false;\n      default:\n        // could be some unrecognised tags\n        return true;\n    }\n  },\n\n  reconcile(model, options) {\n    model.medium = this.reconcilePicture(model.picture, options);\n  },\n});\n\nmodule.exports = TwoCellAnchorXform;\n"],"file":"two-cell-anchor-xform.js"}