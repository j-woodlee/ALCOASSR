{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"names":["_","require","RelType","colCache","Dimensions","StringBuf","Row","Column","SheetRelsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","PageMarginsXform","PageSetupXform","AutoFilterXform","PictureXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","pageMargins","pageSeteup","autoFilter","picture","WorksheetWriter","module","exports","options","id","name","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","rowBreaks","colBreaks","useSharedStrings","_workbook","workbook","_views","views","_writeOpenWorksheet","background","type","imageName","addMedia","pictureId","Target","Type","Image","_background","rId","startedData","prototype","stream","_stream","_openStream","pause","destroy","Error","commit","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeDataValidations","_writePageMargins","_writePageSetup","_writeBackground","_writeCloseWorksheet","end","dimensions","value","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","max","count","defn","column","push","getColumnKey","key","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","_nextRow","eachRow","iteratee","includeEmpty","i","getRow","hasValues","number","_commitRow","found","shift","lastRow","findRow","rowNumber","index","addRow","values","findCell","r","address","getAddress","getCell","getCellEx","mergeCells","Array","slice","call","arguments","merge","intersects","master","j","_write","text","reset","addText","write","_writeSheetProperties","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","_writeSheetFormatProperties","sheetFormatPropertiesModel","_writeColumns","cols","toModel","prepare","styles","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","_hyperlinks","_writeDimensions"],"mappings":"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","sourcesContent":["'use strict';\n\nconst _ = require('../../utils/under-dash');\n\nconst RelType = require('../../xlsx/rel-type');\n\nconst colCache = require('../../utils/col-cache');\nconst Dimensions = require('../../doc/range');\n\nconst StringBuf = require('../../utils/string-buf');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nconst SheetRelsWriter = require('./sheet-rels-writer');\nconst DataValidations = require('../../doc/data-validations');\n\nconst xmlBuffer = new StringBuf();\n\n// ============================================================================================\n// Xforms\nconst ListXform = require('../../xlsx/xform/list-xform');\nconst DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\nconst SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\nconst ColXform = require('../../xlsx/xform/sheet/col-xform');\nconst RowXform = require('../../xlsx/xform/sheet/row-xform');\nconst HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\nconst SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\nconst PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\nconst PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\nconst AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\nconst PictureXform = require('../../xlsx/xform/sheet/picture-xform');\n\n// since prepare and render is functional, we can use singletons\nconst xform = {\n  dataValidations: new DataValidationsXform(),\n  sheetProperties: new SheetPropertiesXform(),\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\n  columns: new ListXform({ tag: 'cols', length: false, childXform: new ColXform() }),\n  row: new RowXform(),\n  hyperlinks: new ListXform({ tag: 'hyperlinks', length: false, childXform: new HyperlinkXform() }),\n  sheetViews: new ListXform({ tag: 'sheetViews', length: false, childXform: new SheetViewXform() }),\n  pageMargins: new PageMarginsXform(),\n  pageSeteup: new PageSetupXform(),\n  autoFilter: new AutoFilterXform(),\n  picture: new PictureXform(),\n};\n\n// ============================================================================================\n\nconst WorksheetWriter = (module.exports = function(options) {\n  // in a workbook, each sheet will have a number\n  this.id = options.id;\n\n  // and a name\n  this.name = options.name || `Sheet${this.id}`;\n\n  // add a state\n  this.state = options.state || 'visible';\n\n  // rows are stored here while they need to be worked on.\n  // when they are committed, they will be deleted.\n  this._rows = [];\n\n  // column definitions\n  this._columns = null;\n\n  // column keys (addRow convenience): key ==> this._columns index\n  this._keys = {};\n\n  // keep record of all merges\n  this._merges = [];\n  this._merges.add = function() {}; // ignore cell instruction\n\n  // keep record of all hyperlinks\n  this._sheetRelsWriter = new SheetRelsWriter(options);\n\n  // keep a record of dimensions\n  this._dimensions = new Dimensions();\n\n  // first uncommitted row\n  this._rowZero = 1;\n\n  // committed flag\n  this.committed = false;\n\n  // for data validations\n  this.dataValidations = new DataValidations();\n\n  // for sharing formulae\n  this._formulae = {};\n  this._siFormulae = 0;\n\n  // for default row height, outline levels, etc\n  this.properties = Object.assign(\n    {},\n    {\n      defaultRowHeight: 15,\n      dyDescent: 55,\n      outlineLevelCol: 0,\n      outlineLevelRow: 0,\n    },\n    options.properties\n  );\n\n  // for all things printing\n  this.pageSetup = Object.assign(\n    {},\n    {\n      margins: { left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3 },\n      orientation: 'portrait',\n      horizontalDpi: 4294967295,\n      verticalDpi: 4294967295,\n      fitToPage: !!(options.pageSetup && ((options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale)),\n      pageOrder: 'downThenOver',\n      blackAndWhite: false,\n      draft: false,\n      cellComments: 'None',\n      errors: 'displayed',\n      scale: 100,\n      fitToWidth: 1,\n      fitToHeight: 1,\n      paperSize: undefined,\n      showRowColHeaders: false,\n      showGridLines: false,\n      horizontalCentered: false,\n      verticalCentered: false,\n      rowBreaks: null,\n      colBreaks: null,\n    },\n    options.pageSetup\n  );\n\n  // using shared strings creates a smaller xlsx file but may use more memory\n  this.useSharedStrings = options.useSharedStrings || false;\n\n  this._workbook = options.workbook;\n\n  // views\n  this._views = options.views || [];\n\n  // auto filter\n  this.autoFilter = options.autoFilter || null;\n\n  // start writing to stream now\n  this._writeOpenWorksheet();\n\n  // background\n  if (options.background && options.background.type === 'image') {\n    const imageName = this._workbook.addMedia(options.background);\n    const pictureId = this._sheetRelsWriter.addMedia({\n      Target: `../media/${imageName}`,\n      Type: RelType.Image,\n    });\n    this._background = {\n      rId: pictureId,\n    };\n  }\n\n  this.startedData = false;\n});\n\nWorksheetWriter.prototype = {\n  get workbook() {\n    return this._workbook;\n  },\n\n  get stream() {\n    if (!this._stream) {\n      // eslint-disable-next-line no-underscore-dangle\n      this._stream = this._workbook._openStream(`/xl/worksheets/sheet${this.id}.xml`);\n\n      // pause stream to prevent 'data' events\n      this._stream.pause();\n    }\n    return this._stream;\n  },\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  },\n\n  commit() {\n    if (this.committed) {\n      return;\n    }\n    // commit all rows\n    this._rows.forEach(cRow => {\n      if (cRow) {\n        // write the row to the stream\n        this._writeRow(cRow);\n      }\n    });\n\n    // we _cannot_ accept new rows from now on\n    this._rows = null;\n\n    if (!this.startedData) {\n      this._writeOpenSheetData();\n    }\n    this._writeCloseSheetData();\n    this._writeAutoFilter();\n    this._writeMergeCells();\n\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // this._writeDimensions();\n\n    this._writeHyperlinks();\n    this._writeDataValidations();\n    this._writePageMargins();\n    this._writePageSetup();\n    this._writeBackground();\n    this._writeCloseWorksheet();\n\n    // signal end of stream to workbook\n    this.stream.end();\n\n    // also commit the hyperlinks if any\n    this._sheetRelsWriter.commit();\n\n    this.committed = true;\n  },\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  },\n\n  get views() {\n    return this._views;\n  },\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  },\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  },\n\n  getColumnKey(key) {\n    return this._keys[key];\n  },\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  },\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  },\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  },\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  },\n\n  // =========================================================================\n  // Rows\n  get _nextRow() {\n    return this._rowZero + this._rows.length;\n  },\n\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._nextRow;\n      for (let i = this._rowZero; i < n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  },\n\n  _commitRow(cRow) {\n    // since rows must be written in order, we commit all rows up till and including cRow\n    let found = false;\n    while (this._rows.length && !found) {\n      const row = this._rows.shift();\n      this._rowZero++;\n      if (row) {\n        this._writeRow(row);\n        found = row.number === cRow.number;\n        this._rowZero = row.number + 1;\n      }\n    }\n  },\n\n  get lastRow() {\n    // returns last uncommitted row\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  },\n\n  // find a row (if exists) by row number\n  findRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n    return this._rows[index];\n  },\n\n  getRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n\n    // may fail if rows have been comitted\n    if (index < 0) {\n      throw new Error('Out of bounds: this row has been committed');\n    }\n    let row = this._rows[index];\n    if (!row) {\n      this._rows[index] = row = new Row(this, rowNumber);\n    }\n    return row;\n  },\n\n  addRow(value) {\n    const row = new Row(this, this._nextRow);\n    this._rows[row.number - this._rowZero] = row;\n    row.values = value;\n    return row;\n  },\n\n  // ================================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.findRow(address.row);\n    return row ? row.findCell(address.column) : undefined;\n  },\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  },\n\n  mergeCells() {\n    // may fail if rows have been comitted\n    const dimensions = new Dimensions(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // check cells aren't already merged\n    this._merges.forEach(merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges.push(dimensions);\n  },\n\n  // ================================================================================\n  _write(text) {\n    xmlBuffer.reset();\n    xmlBuffer.addText(text);\n    this.stream.write(xmlBuffer);\n  },\n  _writeSheetProperties(xmlBuf, properties, pageSetup) {\n    const sheetPropertiesModel = {\n      outlineProperties: properties && properties.outlineProperties,\n      tabColor: properties && properties.tabColor,\n      pageSetup:\n        pageSetup && pageSetup.fitToPage\n          ? {\n              fitToPage: pageSetup.fitToPage,\n            }\n          : undefined,\n    };\n\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\n  },\n  _writeSheetFormatProperties(xmlBuf, properties) {\n    const sheetFormatPropertiesModel = properties\n      ? {\n          defaultRowHeight: properties.defaultRowHeight,\n          dyDescent: properties.dyDescent,\n          outlineLevelCol: properties.outlineLevelCol,\n          outlineLevelRow: properties.outlineLevelRow,\n        }\n      : undefined;\n\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\n  },\n  _writeOpenWorksheet() {\n    xmlBuffer.reset();\n\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\n    xmlBuffer.addText(\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\n        ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\n        ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\n        ' mc:Ignorable=\"x14ac\"' +\n        ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">'\n    );\n\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\n\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\n\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\n\n    this.stream.write(xmlBuffer);\n  },\n  _writeColumns() {\n    const cols = Column.toModel(this.columns);\n    if (cols) {\n      xform.columns.prepare(cols, { styles: this._workbook.styles });\n      this.stream.write(xform.columns.toXml(cols));\n    }\n  },\n  _writeOpenSheetData() {\n    this._write('<sheetData>');\n  },\n  _writeRow(row) {\n    if (!this.startedData) {\n      this._writeColumns();\n      this._writeOpenSheetData();\n      this.startedData = true;\n    }\n\n    if (row.hasValues || row.height) {\n      const { model } = row;\n      const options = {\n        styles: this._workbook.styles,\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\n        merges: this._merges,\n        formulae: this._formulae,\n        siFormulae: this._siFormulae,\n      };\n      xform.row.prepare(model, options);\n      this.stream.write(xform.row.toXml(model));\n    }\n  },\n  _writeCloseSheetData() {\n    this._write('</sheetData>');\n  },\n  _writeMergeCells() {\n    if (this._merges.length) {\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<mergeCells count=\"${this._merges.length}\">`);\n      this._merges.forEach(merge => {\n        xmlBuffer.addText(`<mergeCell ref=\"${merge}\"/>`);\n      });\n      xmlBuffer.addText('</mergeCells>');\n\n      this.stream.write(xmlBuffer);\n    }\n  },\n  _writeHyperlinks() {\n    // eslint-disable-next-line no-underscore-dangle\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\n  },\n  _writeDataValidations() {\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\n  },\n  _writePageMargins() {\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\n  },\n  _writePageSetup() {\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\n  },\n  _writeAutoFilter() {\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\n  },\n  _writeBackground() {\n    if (this._background) {\n      this.stream.write(xform.picture.toXml(this._background));\n    }\n  },\n  _writeDimensions() {\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // and we don't know the dimensions until the commit, so don't write them.\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\n  },\n  _writeCloseWorksheet() {\n    this._write('</worksheet>');\n  },\n};\n"],"file":"worksheet-writer.js"}