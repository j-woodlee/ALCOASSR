{"version":3,"sources":["../../../../lib/stream/xlsx/workbook-writer.js"],"names":["fs","require","Archiver","PromiseLib","StreamBuf","RelType","StylesXform","SharedStrings","DefinedNames","CoreXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","SharedStringsXform","WorksheetWriter","theme1Xml","WorkbookWriter","module","exports","options","created","Date","modified","creator","lastModifiedBy","lastPrinted","useSharedStrings","sharedStrings","styles","useStyles","Mock","_definedNames","_worksheets","views","media","zip","stream","filename","createWriteStream","pipe","promise","Promise","all","addThemes","addOfficeRels","prototype","definedNames","_openStream","path","self","bufSize","batch","append","name","on","emit","_commitWorksheets","commitWorksheet","worksheet","committed","resolve","commit","promises","map","length","then","addContentTypes","addApp","addCore","addSharedStrings","addStyles","addWorkbookRels","addWorkbook","_finalize","nextId","i","addWorksheet","undefined","tabColor","console","trace","properties","Object","assign","id","workbook","state","pageSetup","autoFilter","getWorksheet","find","xml","xform","toXml","Id","Type","OfficeDocument","Target","CoreProperties","ExtenderProperties","model","worksheets","filter","Boolean","coreXform","count","sharedStringsXform","relationships","Styles","Theme","push","forEach","rId","Worksheet","prepare","reject","finalize"],"mappings":"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","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst Archiver = require('archiver');\nconst PromiseLib = require('../../utils/promise');\n\nconst StreamBuf = require('../../utils/stream-buf');\n\nconst RelType = require('../../xlsx/rel-type');\nconst StylesXform = require('../../xlsx/xform/style/styles-xform');\nconst SharedStrings = require('../../utils/shared-strings');\nconst DefinedNames = require('../../doc/defined-names');\n\nconst CoreXform = require('../../xlsx/xform/core/core-xform');\nconst RelationshipsXform = require('../../xlsx/xform/core/relationships-xform');\nconst ContentTypesXform = require('../../xlsx/xform/core/content-types-xform');\nconst AppXform = require('../../xlsx/xform/core/app-xform');\nconst WorkbookXform = require('../../xlsx/xform/book/workbook-xform');\nconst SharedStringsXform = require('../../xlsx/xform/strings/shared-strings-xform');\n\nconst WorksheetWriter = require('./worksheet-writer');\n\nconst theme1Xml = require('../../xlsx/xml/theme1.js');\n\nconst WorkbookWriter = (module.exports = function(options) {\n  options = options || {};\n\n  this.created = options.created || new Date();\n  this.modified = options.modified || this.created;\n  this.creator = options.creator || 'ExcelJS';\n  this.lastModifiedBy = options.lastModifiedBy || 'ExcelJS';\n  this.lastPrinted = options.lastPrinted;\n\n  // using shared strings creates a smaller xlsx file but may use more memory\n  this.useSharedStrings = options.useSharedStrings || false;\n  this.sharedStrings = new SharedStrings();\n\n  // style manager\n  this.styles = options.useStyles ? new StylesXform(true) : new StylesXform.Mock(true);\n\n  // defined names\n  this._definedNames = new DefinedNames();\n\n  this._worksheets = [];\n  this.views = [];\n\n  this.media = [];\n\n  this.zip = Archiver('zip');\n  if (options.stream) {\n    this.stream = options.stream;\n  } else if (options.filename) {\n    this.stream = fs.createWriteStream(options.filename);\n  } else {\n    this.stream = new StreamBuf();\n  }\n  this.zip.pipe(this.stream);\n\n  // these bits can be added right now\n  this.promise = PromiseLib.Promise.all([this.addThemes(), this.addOfficeRels()]);\n});\n\nWorkbookWriter.prototype = {\n  get definedNames() {\n    return this._definedNames;\n  },\n\n  _openStream(path) {\n    const self = this;\n    const stream = new StreamBuf({ bufSize: 65536, batch: true });\n    self.zip.append(stream, { name: path });\n    stream.on('finish', () => {\n      stream.emit('zipped');\n    });\n    return stream;\n  },\n  _commitWorksheets() {\n    const commitWorksheet = function(worksheet) {\n      if (!worksheet.committed) {\n        return new PromiseLib.Promise(resolve => {\n          worksheet.stream.on('zipped', () => {\n            resolve();\n          });\n          worksheet.commit();\n        });\n      }\n      return PromiseLib.Promise.resolve();\n    };\n    // if there are any uncommitted worksheets, commit them now and wait\n    const promises = this._worksheets.map(commitWorksheet);\n    if (promises.length) {\n      return PromiseLib.Promise.all(promises);\n    }\n    return PromiseLib.Promise.resolve();\n  },\n\n  commit() {\n    // commit all worksheets, then add suplimentary files\n    return this.promise\n      .then(() => this._commitWorksheets())\n      .then(() =>\n        PromiseLib.Promise.all([this.addContentTypes(), this.addApp(), this.addCore(), this.addSharedStrings(), this.addStyles(), this.addWorkbookRels()])\n      )\n      .then(() => this.addWorkbook())\n      .then(() => this._finalize());\n  },\n  get nextId() {\n    // find the next unique spot to add worksheet\n    let i;\n    for (i = 1; i < this._worksheets.length; i++) {\n      if (!this._worksheets[i]) {\n        return i;\n      }\n    }\n    return this._worksheets.length || 1;\n  },\n  addWorksheet(name, options) {\n    // it's possible to add a worksheet with different than default\n    // shared string handling\n    // in fact, it's even possible to switch it mid-sheet\n    options = options || {};\n    const useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : this.useSharedStrings;\n\n    if (options.tabColor) {\n      // eslint-disable-next-line no-console\n      console.trace('tabColor option has moved to { properties: tabColor: {...} }');\n      options.properties = Object.assign(\n        {\n          tabColor: options.tabColor,\n        },\n        options.properties\n      );\n    }\n\n    const id = this.nextId;\n    name = name || `sheet${id}`;\n\n    const worksheet = new WorksheetWriter({\n      id,\n      name,\n      workbook: this,\n      useSharedStrings,\n      properties: options.properties,\n      state: options.state,\n      pageSetup: options.pageSetup,\n      views: options.views,\n      autoFilter: options.autoFilter,\n    });\n\n    this._worksheets[id] = worksheet;\n    return worksheet;\n  },\n  getWorksheet(id) {\n    if (id === undefined) {\n      return this._worksheets.find(() => true);\n    }\n    if (typeof id === 'number') {\n      return this._worksheets[id];\n    }\n    if (typeof id === 'string') {\n      return this._worksheets.find(worksheet => worksheet && worksheet.name === id);\n    }\n    return undefined;\n  },\n  addStyles() {\n    const self = this;\n    return new PromiseLib.Promise(resolve => {\n      self.zip.append(self.styles.xml, { name: 'xl/styles.xml' });\n      resolve();\n    });\n  },\n  addThemes() {\n    const self = this;\n    return new PromiseLib.Promise(resolve => {\n      self.zip.append(theme1Xml, { name: 'xl/theme/theme1.xml' });\n      resolve();\n    });\n  },\n  addOfficeRels() {\n    const self = this;\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml([\n        { Id: 'rId1', Type: RelType.OfficeDocument, Target: 'xl/workbook.xml' },\n        { Id: 'rId2', Type: RelType.CoreProperties, Target: 'docProps/core.xml' },\n        { Id: 'rId3', Type: RelType.ExtenderProperties, Target: 'docProps/app.xml' },\n      ]);\n      self.zip.append(xml, { name: '/_rels/.rels' });\n      resolve();\n    });\n  },\n\n  addContentTypes() {\n    return new PromiseLib.Promise(resolve => {\n      const model = {\n        worksheets: this._worksheets.filter(Boolean),\n        sharedStrings: this.sharedStrings,\n      };\n      const xform = new ContentTypesXform();\n      const xml = xform.toXml(model);\n      this.zip.append(xml, { name: '[Content_Types].xml' });\n      resolve();\n    });\n  },\n  addApp() {\n    return new PromiseLib.Promise(resolve => {\n      const model = {\n        worksheets: this._worksheets.filter(Boolean),\n      };\n      const xform = new AppXform();\n      const xml = xform.toXml(model);\n      this.zip.append(xml, { name: 'docProps/app.xml' });\n      resolve();\n    });\n  },\n  addCore() {\n    const self = this;\n    return new PromiseLib.Promise(resolve => {\n      const coreXform = new CoreXform();\n      const xml = coreXform.toXml(self);\n      self.zip.append(xml, { name: 'docProps/core.xml' });\n      resolve();\n    });\n  },\n  addSharedStrings() {\n    const self = this;\n    if (this.sharedStrings.count) {\n      return new PromiseLib.Promise(resolve => {\n        const sharedStringsXform = new SharedStringsXform();\n        const xml = sharedStringsXform.toXml(self.sharedStrings);\n        self.zip.append(xml, { name: '/xl/sharedStrings.xml' });\n        resolve();\n      });\n    }\n    return PromiseLib.Promise.resolve();\n  },\n  addWorkbookRels() {\n    const self = this;\n    let count = 1;\n    const relationships = [\n      { Id: `rId${count++}`, Type: RelType.Styles, Target: 'styles.xml' },\n      { Id: `rId${count++}`, Type: RelType.Theme, Target: 'theme/theme1.xml' },\n    ];\n    if (this.sharedStrings.count) {\n      relationships.push({ Id: `rId${count++}`, Type: RelType.SharedStrings, Target: 'sharedStrings.xml' });\n    }\n    this._worksheets.forEach(worksheet => {\n      if (worksheet) {\n        worksheet.rId = `rId${count++}`;\n        relationships.push({ Id: worksheet.rId, Type: RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml` });\n      }\n    });\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml(relationships);\n      self.zip.append(xml, { name: '/xl/_rels/workbook.xml.rels' });\n      resolve();\n    });\n  },\n  addWorkbook() {\n    const { zip } = this;\n    const model = {\n      worksheets: this._worksheets.filter(Boolean),\n      definedNames: this._definedNames.model,\n      views: this.views,\n      properties: {},\n    };\n\n    return new PromiseLib.Promise(resolve => {\n      const xform = new WorkbookXform();\n      xform.prepare(model);\n      zip.append(xform.toXml(model), { name: '/xl/workbook.xml' });\n      resolve();\n    });\n  },\n  _finalize() {\n    return new PromiseLib.Promise((resolve, reject) => {\n      this.stream.on('error', reject);\n      this.stream.on('finish', () => {\n        resolve(this);\n      });\n      this.zip.on('error', reject);\n\n      this.zip.finalize();\n    });\n  },\n};\n"],"file":"workbook-writer.js"}