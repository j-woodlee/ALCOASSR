{"version":3,"sources":["../../../lib/utils/stuttered-pipe.js"],"names":["events","require","utils","StutteredPipe","module","exports","readable","writable","options","self","bufSize","autoPause","paused","eod","scheduled","on","end","resume","_schedule","inherits","EventEmitter","pause","clearImmediate","setImmediate","data","read","length","write"],"mappings":"AAAA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB,C,CAEA;AACA;;;AACA,IAAME,aAAa,GAAIC,MAAM,CAACC,OAAP,GAAiB,UAASC,QAAT,EAAmBC,QAAnB,EAA6BC,OAA7B,EAAsC;AAC5E,MAAMC,IAAI,GAAG,IAAb;AACAD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,OAAKF,QAAL,GAAgBA,QAAhB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKG,OAAL,GAAeF,OAAO,CAACE,OAAR,IAAmB,KAAlC;AACA,OAAKC,SAAL,GAAiBH,OAAO,CAACG,SAAR,IAAqB,KAAtC;AAEA,OAAKC,MAAL,GAAc,KAAd;AACA,OAAKC,GAAL,GAAW,KAAX;AACA,OAAKC,SAAL,GAAiB,IAAjB;AAEAR,EAAAA,QAAQ,CAACS,EAAT,CAAY,KAAZ,EAAmB,YAAM;AACvBN,IAAAA,IAAI,CAACI,GAAL,GAAW,IAAX;AACAN,IAAAA,QAAQ,CAACS,GAAT;AACD,GAHD,EAb4E,CAkB5E;AACA;;AACAV,EAAAA,QAAQ,CAACS,EAAT,CAAY,UAAZ,EAAwB,YAAM;AAC5B,QAAI,CAACN,IAAI,CAACG,MAAV,EAAkB;AAChBH,MAAAA,IAAI,CAACQ,MAAL;AACD;AACF,GAJD;;AAKA,OAAKC,SAAL;AACD,CA1BD;;AA4BAhB,KAAK,CAACiB,QAAN,CAAehB,aAAf,EAA8BH,MAAM,CAACoB,YAArC,EAAmD;AACjDC,EAAAA,KADiD,mBACzC;AACN,SAAKT,MAAL,GAAc,IAAd;AACD,GAHgD;AAIjDK,EAAAA,MAJiD,oBAIxC;AACP,QAAI,CAAC,KAAKJ,GAAV,EAAe;AACb,UAAI,KAAKC,SAAL,KAAmB,IAAvB,EAA6B;AAC3BQ,QAAAA,cAAc,CAAC,KAAKR,SAAN,CAAd;AACD;;AACD,WAAKI,SAAL;AACD;AACF,GAXgD;AAYjDA,EAAAA,SAZiD,uBAYrC;AAAA;;AACV,SAAKJ,SAAL,GAAiBS,YAAY,CAAC,YAAM;AAClC,MAAA,KAAI,CAACT,SAAL,GAAiB,IAAjB;;AACA,UAAI,CAAC,KAAI,CAACD,GAAN,IAAa,CAAC,KAAI,CAACD,MAAvB,EAA+B;AAC7B,YAAMY,IAAI,GAAG,KAAI,CAAClB,QAAL,CAAcmB,IAAd,CAAmB,KAAI,CAACf,OAAxB,CAAb;;AACA,YAAIc,IAAI,IAAIA,IAAI,CAACE,MAAjB,EAAyB;AACvB,UAAA,KAAI,CAACnB,QAAL,CAAcoB,KAAd,CAAoBH,IAApB;;AAEA,cAAI,CAAC,KAAI,CAACZ,MAAN,IAAgB,CAAC,KAAI,CAACD,SAA1B,EAAqC;AACnC,YAAA,KAAI,CAACO,SAAL;AACD;AACF,SAND,MAMO,IAAI,CAAC,KAAI,CAACN,MAAV,EAAkB;AACvB,UAAA,KAAI,CAACM,SAAL;AACD;AACF;AACF,KAd4B,CAA7B;AAeD;AA5BgD,CAAnD","sourcesContent":["'use strict';\n\nconst events = require('events');\n\nconst utils = require('./utils');\n\n// =============================================================================\n// StutteredPipe - Used to slow down streaming so GC can get a look in\nconst StutteredPipe = (module.exports = function(readable, writable, options) {\n  const self = this;\n  options = options || {};\n\n  this.readable = readable;\n  this.writable = writable;\n  this.bufSize = options.bufSize || 16384;\n  this.autoPause = options.autoPause || false;\n\n  this.paused = false;\n  this.eod = false;\n  this.scheduled = null;\n\n  readable.on('end', () => {\n    self.eod = true;\n    writable.end();\n  });\n\n  // need to have some way to communicate speed of stream\n  // back from the consumer\n  readable.on('readable', () => {\n    if (!self.paused) {\n      self.resume();\n    }\n  });\n  this._schedule();\n});\n\nutils.inherits(StutteredPipe, events.EventEmitter, {\n  pause() {\n    this.paused = true;\n  },\n  resume() {\n    if (!this.eod) {\n      if (this.scheduled !== null) {\n        clearImmediate(this.scheduled);\n      }\n      this._schedule();\n    }\n  },\n  _schedule() {\n    this.scheduled = setImmediate(() => {\n      this.scheduled = null;\n      if (!this.eod && !this.paused) {\n        const data = this.readable.read(this.bufSize);\n        if (data && data.length) {\n          this.writable.write(data);\n\n          if (!this.paused && !this.autoPause) {\n            this._schedule();\n          }\n        } else if (!this.paused) {\n          this._schedule();\n        }\n      }\n    });\n  },\n});\n"],"file":"stuttered-pipe.js"}