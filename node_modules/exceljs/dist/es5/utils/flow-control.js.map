{"version":3,"sources":["../../../lib/utils/flow-control.js"],"names":["events","require","PromiseLib","utils","FlowControl","module","exports","options","queue","pipes","children","parent","flushing","gc","getTimeout","threshold","undefined","divisor","memory","process","memoryUsage","heapSize","heapTotal","Math","floor","inherits","EventEmitter","name","corked","join","length","some","child","stem","_write","dst","data","encoding","Promise","resolve","reject","write","error","_pipe","chunk","promises","forEach","pipe","sync","stream","push","end","all","then","callback","e","_animate","count","seq","cr","setInterval","stdout","_delay","timeout","anime","setTimeout","clearInterval","_flush","shift","setImmediate","emit","Function","nop","Error","stemFlow","unpipe","filter","createChild","Object","assign","on","item"],"mappings":"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","sourcesContent":["'use strict';\n\nconst events = require('events');\nconst PromiseLib = require('./promise');\n\nconst utils = require('./utils');\n\n// =============================================================================\n// FlowControl - Used to slow down streaming to manageable speed\n// Implements a subset of Stream.Duplex: pipe() and write()\nconst FlowControl = (module.exports = function(options) {\n  this.options = options = options || {};\n\n  // Buffer queue\n  this.queue = [];\n\n  // Consumer streams\n  this.pipes = [];\n\n  // Down-stream flow-control instances\n  this.children = [];\n\n  // Up-stream flow-control instances\n  this.parent = options.parent;\n\n  // Ensure we don't flush more than once at a time\n  this.flushing = false;\n\n  // determine timeout for flow control delays\n  if (options.gc) {\n    const { gc } = options;\n    if (gc.getTimeout) {\n      this.getTimeout = gc.getTimeout;\n    } else {\n      // heap size below which we don't bother delaying\n      const threshold = gc.threshold !== undefined ? gc.threshold : 150000000;\n      // convert from heapsize to ms timeout\n      const divisor = gc.divisor !== undefined ? gc.divisor : 500000;\n      this.getTimeout = function() {\n        const memory = process.memoryUsage();\n        const heapSize = memory.heapTotal;\n        return heapSize < threshold ? 0 : Math.floor(heapSize / divisor);\n      };\n    }\n  } else {\n    this.getTimeout = null;\n  }\n});\n\nutils.inherits(FlowControl, events.EventEmitter, {\n  get name() {\n    return ['FlowControl', this.parent ? 'Child' : 'Root', this.corked ? 'corked' : 'open'].join(' ');\n  },\n  get corked() {\n    // We remain corked while we have children and at least one has data to consume\n    return this.children.length > 0 && this.children.some(child => child.queue && child.queue.length);\n  },\n  get stem() {\n    // the decision to stem the incoming data depends on whether the children are corked\n    // and how many buffers we have backed up\n    return this.corked || !this.queue || this.queue.length > 2;\n  },\n\n  _write(dst, data, encoding) {\n    // Write to a single destination and return a promise\n\n    return new PromiseLib.Promise((resolve, reject) => {\n      dst.write(data, encoding, error => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  },\n\n  _pipe(chunk) {\n    // Write chunk to all pipes. A chunk with no data is the end\n    const promises = [];\n    this.pipes.forEach(pipe => {\n      if (chunk.data) {\n        if (pipe.sync) {\n          pipe.stream.write(chunk.data, chunk.encoding);\n        } else {\n          promises.push(this._write(pipe.stream, chunk.data, chunk.encoding));\n        }\n      } else {\n        pipe.stream.end();\n      }\n    });\n    if (!promises.length) {\n      promises.push(PromiseLib.Promise.resolve());\n    }\n    return PromiseLib.Promise.all(promises).then(() => {\n      try {\n        chunk.callback();\n      } catch (e) {\n        // quietly ignore\n      }\n    });\n  },\n  _animate() {\n    let count = 0;\n    const seq = ['|', '/', '-', '\\\\'];\n    const cr = '\\u001b[0G'; // was '\\033[0G'\n    return setInterval(() => {\n      process.stdout.write(seq[count++ % 4] + cr);\n    }, 100);\n  },\n  _delay() {\n    // in certain situations it may be useful to delay processing (e.g. for GC)\n    const timeout = this.getTimeout && this.getTimeout();\n    if (timeout) {\n      return new PromiseLib.Promise(resolve => {\n        const anime = this._animate();\n        setTimeout(() => {\n          clearInterval(anime);\n          resolve();\n        }, timeout);\n      });\n    }\n    return PromiseLib.Promise.resolve();\n  },\n\n  _flush() {\n    // If/while not corked and we have buffers to send, send them\n    if (this.queue && !this.flushing && !this.corked) {\n      if (this.queue.length) {\n        this.flushing = true;\n        this._delay()\n          .then(() => this._pipe(this.queue.shift()))\n          .then(() => {\n            setImmediate(() => {\n              this.flushing = false;\n              this._flush();\n            });\n          });\n      }\n\n      if (!this.stem) {\n        // Signal up-stream that we're ready for more data\n        this.emit('drain');\n      }\n    }\n  },\n\n  write(data, encoding, callback) {\n    // Called by up-stream pipe\n    if (encoding instanceof Function) {\n      callback = encoding;\n      encoding = 'utf8';\n    }\n    callback = callback || utils.nop;\n\n    if (!this.queue) {\n      throw new Error('Cannot write to stream after end');\n    }\n\n    // Always queue chunks and then flush\n    this.queue.push({\n      data,\n      encoding,\n      callback,\n    });\n    this._flush();\n\n    // restrict further incoming data if we have backed up buffers or\n    // the children are still busy\n    const stemFlow = this.corked || this.queue.length > 3;\n    return !stemFlow;\n  },\n\n  end() {\n    // Signal from up-stream\n    this.queue.push({\n      callback: () => {\n        this.queue = null;\n        this.emit('finish');\n      },\n    });\n    this._flush();\n  },\n\n  pipe(stream, options) {\n    options = options || {};\n\n    // some streams don't call callbacks\n    const sync = options.sync || false;\n\n    this.pipes.push({\n      stream,\n      sync,\n    });\n  },\n  unpipe(stream) {\n    this.pipes = this.pipes.filter(pipe => pipe.stream !== stream);\n  },\n\n  createChild() {\n    // Create a down-stream flow-control\n    const options = Object.assign({ parent: this }, this.options);\n    const child = new FlowControl(options);\n    this.children.push(child);\n\n    child.on('drain', () => {\n      // a child is ready for more\n      this._flush();\n    });\n\n    child.on('finish', () => {\n      // One child has finished its stream. Remove it and continue\n      this.children = this.children.filter(item => item !== child);\n      this._flush();\n    });\n\n    return child;\n  },\n});\n"],"file":"flow-control.js"}